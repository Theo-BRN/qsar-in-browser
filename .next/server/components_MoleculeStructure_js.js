"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "components_MoleculeStructure_js";
exports.ids = ["components_MoleculeStructure_js"];
exports.modules = {

/***/ "./components/MoleculeStructure.js":
/*!*****************************************!*\
  !*** ./components/MoleculeStructure.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ \"prop-types\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _rdkit_rdkit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @rdkit/rdkit */ \"@rdkit/rdkit\");\n/* harmony import */ var _rdkit_rdkit__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_rdkit_rdkit__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nconst initRDKit = (()=>{\n    let rdkitLoadingPromise;\n    return ()=>{\n        /**\n     * Utility function ensuring there's only one call made to load RDKit\n     * It returns a promise with the resolved RDKit API as value on success,\n     * and a rejected promise with the error on failure.\n     *\n     * The RDKit API is also attached to the global object on successful load.\n     */ if (!rdkitLoadingPromise) {\n            rdkitLoadingPromise = new Promise((resolve, reject)=>{\n                _rdkit_rdkit__WEBPACK_IMPORTED_MODULE_4___default()().then((RDKit)=>{\n                    resolve(RDKit);\n                }).catch((e)=>{\n                    reject();\n                });\n            });\n        }\n        return rdkitLoadingPromise;\n    };\n})();\nclass MoleculeStructure extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n    static{\n        this.propTypes = {\n            /**\n     * Generic properties\n     */ id: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string).isRequired,\n            className: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n            svgMode: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),\n            width: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().number),\n            height: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().number),\n            /**\n     * RDKit-specific properties\n     */ structure: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string).isRequired,\n            subStructure: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n            extraDetails: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().object),\n            drawingDelay: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().number)\n        };\n    }\n    static{\n        this.defaultProps = {\n            subStructure: \"\",\n            className: \"\",\n            width: 250,\n            height: 200,\n            svgMode: false,\n            extraDetails: {},\n            drawingDelay: undefined\n        };\n    }\n    constructor(props){\n        super(props);\n        this.drawOnce = (()=>{\n            let wasCalled = false;\n            return ()=>{\n                if (!wasCalled) {\n                    wasCalled = true;\n                    this.draw();\n                }\n            };\n        })();\n        this.MOL_DETAILS = {\n            width: this.props.width,\n            height: this.props.height,\n            bondLineWidth: 1,\n            addStereoAnnotation: true,\n            ...this.props.extraDetails\n        };\n        this.state = {\n            svg: undefined,\n            rdKitLoaded: false,\n            rdKitError: false\n        };\n    }\n    draw() {\n        if (this.props.drawingDelay) {\n            setTimeout(()=>{\n                this.drawSVGorCanvas();\n            }, this.props.drawingDelay);\n        } else {\n            this.drawSVGorCanvas();\n        }\n    }\n    drawSVGorCanvas() {\n        const mol = this.RDKit.get_mol(this.props.structure || \"invalid\");\n        const qmol = this.RDKit.get_qmol(this.props.subStructure || \"invalid\");\n        const isValidMol = this.isValidMol(mol);\n        if (this.props.svgMode && isValidMol) {\n            const svg = mol.get_svg_with_highlights(this.getMolDetails(mol, qmol));\n            this.setState({\n                svg\n            });\n        } else if (isValidMol) {\n            const canvas = document.getElementById(this.props.id);\n            mol.draw_to_canvas_with_highlights(canvas, this.getMolDetails(mol, qmol));\n        }\n        /**\n     * Delete C++ mol objects manually\n     * https://emscripten.org/docs/porting/connecting_cpp_and_javascript/embind.html#memory-management\n     */ mol?.delete();\n        qmol?.delete();\n    }\n    isValidMol(mol) {\n        return !!mol;\n    }\n    getMolDetails(mol, qmol) {\n        if (this.isValidMol(mol) && this.isValidMol(qmol)) {\n            const subStructHighlightDetails = JSON.parse(mol.get_substruct_matches(qmol));\n            const subStructHighlightDetailsMerged = !lodash__WEBPACK_IMPORTED_MODULE_2___default().isEmpty(subStructHighlightDetails) ? subStructHighlightDetails.reduce((acc, { atoms, bonds })=>({\n                    atoms: [\n                        ...acc.atoms,\n                        ...atoms\n                    ],\n                    bonds: [\n                        ...acc.bonds,\n                        ...bonds\n                    ]\n                }), {\n                bonds: [],\n                atoms: []\n            }) : subStructHighlightDetails;\n            return JSON.stringify({\n                ...this.MOL_DETAILS,\n                ...this.props.extraDetails || {},\n                ...subStructHighlightDetailsMerged\n            });\n        } else {\n            return JSON.stringify({\n                ...this.MOL_DETAILS,\n                ...this.props.extraDetails || {}\n            });\n        }\n    }\n    componentDidMount() {\n        initRDKit().then((RDKit)=>{\n            this.RDKit = RDKit;\n            this.setState({\n                rdKitLoaded: true\n            });\n            try {\n                this.draw();\n            } catch (err) {\n                console.log(err);\n            }\n        }).catch((err)=>{\n            console.log(err);\n            this.setState({\n                rdKitError: true\n            });\n        });\n    }\n    componentDidUpdate(prevProps) {\n        if (!this.state.rdKitError && this.state.rdKitLoaded && !this.props.svgMode) {\n            this.drawOnce();\n        }\n        if (this.state.rdKitLoaded) {\n            const shouldUpdateDrawing = prevProps.structure !== this.props.structure || prevProps.svgMode !== this.props.svgMode || prevProps.subStructure !== this.props.subStructure || prevProps.width !== this.props.width || prevProps.height !== this.props.height || !lodash__WEBPACK_IMPORTED_MODULE_2___default().isEqual(prevProps.extraDetails, this.props.extraDetails);\n            if (shouldUpdateDrawing) {\n                this.draw();\n            }\n        }\n    }\n    render() {\n        if (this.state.rdKitError) {\n            return \"Error loading renderer.\";\n        }\n        if (!this.state.rdKitLoaded) {\n            return \"Loading renderer...\";\n        }\n        const mol = this.RDKit.get_mol(this.props.structure || \"invalid\");\n        const isValidMol = this.isValidMol(mol);\n        mol?.delete();\n        if (!isValidMol) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                title: `Cannot render structure: ${this.props.structure}`,\n                children: \"Render Error.\"\n            }, void 0, false, {\n                fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/MoleculeStructure.js\",\n                lineNumber: 210,\n                columnNumber: 9\n            }, this);\n        } else if (this.props.svgMode) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                title: this.props.structure,\n                className: \"molecule-structure-svg \" + (this.props.className || \"\"),\n                style: {\n                    width: this.props.width,\n                    height: this.props.height\n                },\n                dangerouslySetInnerHTML: {\n                    __html: this.state.svg\n                }\n            }, void 0, false, {\n                fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/MoleculeStructure.js\",\n                lineNumber: 216,\n                columnNumber: 9\n            }, this);\n        } else {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"molecule-canvas-container \" + (this.props.className || \"\"),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                    title: this.props.structure,\n                    id: this.props.id,\n                    width: this.props.width,\n                    height: this.props.height\n                }, void 0, false, {\n                    fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/MoleculeStructure.js\",\n                    lineNumber: 230,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/MoleculeStructure.js\",\n                lineNumber: 225,\n                columnNumber: 9\n            }, this);\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MoleculeStructure);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/MoleculeStructure.js\n");

/***/ })

};
;