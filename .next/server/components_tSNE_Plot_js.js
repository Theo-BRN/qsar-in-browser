"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "components_tSNE_Plot_js";
exports.ids = ["components_tSNE_Plot_js"];
exports.modules = {

/***/ "./components/D3ColorLegend.js":
/*!*************************************!*\
  !*** ./components/D3ColorLegend.js ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"d3\");\n/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-scale-chromatic */ \"d3-scale-chromatic\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([d3__WEBPACK_IMPORTED_MODULE_2__, d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_3__]);\n([d3__WEBPACK_IMPORTED_MODULE_2__, d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nconst D3ColorLegend = ()=>{\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        var colorScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleSequential(d3__WEBPACK_IMPORTED_MODULE_2__.interpolateSinebow).domain([\n            0,\n            10\n        ]);\n        continuous(chartRef, colorScale);\n        function continuous(selector_id, colorscale) {\n            var legendheight = 50, legendwidth = 500, margin = {\n                top: 10,\n                right: 2,\n                bottom: 20,\n                left: 60\n            }; // Adjust margins for a horizontal legend\n            var canvas = d3__WEBPACK_IMPORTED_MODULE_2__.select(selector_id.current).style(\"height\", legendheight + \"px\").style(\"width\", legendwidth + \"px\").style(\"position\", \"relative\").append(\"canvas\").attr(\"height\", 1) // Set height to 1 for a horizontal legend\n            .attr(\"width\", legendwidth - margin.left - margin.right) // Adjust width based on legendwidth and margins\n            .style(\"height\", legendheight - margin.top - margin.bottom + \"px\").style(\"width\", legendwidth - margin.left - margin.right + \"px\").style(\"border\", \"1px solid #000\").style(\"position\", \"absolute\").style(\"top\", margin.top + \"px\").style(\"left\", margin.left + \"px\").node();\n            var ctx = canvas.getContext(\"2d\");\n            var legendscale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().range([\n                0,\n                legendwidth - margin.left - margin.right\n            ]) // Adjust the range for a horizontal legend\n            .domain(colorscale.domain());\n            // image data hackery based on http://bl.ocks.org/mbostock/048d21cf747371b11884f75ad896e5a5\n            var image = ctx.createImageData(legendwidth - margin.left - margin.right, 1); // Create a horizontal image\n            d3__WEBPACK_IMPORTED_MODULE_2__.range(legendwidth - margin.left - margin.right).forEach(function(i) {\n                var c = d3__WEBPACK_IMPORTED_MODULE_2__.rgb(colorscale(legendscale.invert(i)));\n                image.data[4 * i] = c.r;\n                image.data[4 * i + 1] = c.g;\n                image.data[4 * i + 2] = c.b;\n                image.data[4 * i + 3] = 255;\n            });\n            ctx.putImageData(image, 0, 0);\n            var legendaxis = d3__WEBPACK_IMPORTED_MODULE_2__.axisBottom() // Use axisBottom for a horizontal legend\n            .scale(legendscale).tickSize(6).ticks(8);\n            var svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(selector_id.current).append(\"svg\").attr(\"height\", legendheight + \"px\").attr(\"width\", legendwidth + \"px\").style(\"position\", \"absolute\").style(\"left\", \"0px\").style(\"top\", \"0px\");\n            svg.append(\"g\").attr(\"class\", \"axis\").attr(\"transform\", \"translate(\" + margin.left + \",\" + (legendheight - margin.bottom) + \")\") // Adjust transform for a horizontal legend\n            .call(legendaxis);\n        }\n        ;\n    }, []); // Empty dependency array to ensure useEffect runs only once\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: chartRef,\n        id: \"color-legend\"\n    }, void 0, false, {\n        fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/D3ColorLegend.js\",\n        lineNumber: 73,\n        columnNumber: 12\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (D3ColorLegend);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/D3ColorLegend.js\n");

/***/ }),

/***/ "./components/Loader.js":
/*!******************************!*\
  !*** ./components/Loader.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Loader)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction Loader({ loadingText = \"Processsing\" }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            textAlign: \"center\"\n        },\n        children: [\n            loadingText,\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"loader\"\n            }, void 0, false, {\n                fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/Loader.js\",\n                lineNumber: 5,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/Loader.js\",\n        lineNumber: 3,\n        columnNumber: 9\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0xvYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWUsU0FBU0EsT0FBTyxFQUFFQyxjQUFjLGFBQWEsRUFBQztJQUN6RCxxQkFDSSw4REFBQ0M7UUFBSUMsT0FBTztZQUFDQyxXQUFVO1FBQVE7O1lBQzFCSDswQkFDRCw4REFBQ0M7Z0JBQUlHLFdBQVU7Ozs7Ozs7Ozs7OztBQUkzQiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXBwLy4vY29tcG9uZW50cy9Mb2FkZXIuanM/YTE1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMb2FkZXIoeyBsb2FkaW5nVGV4dCA9ICdQcm9jZXNzc2luZyd9KXtcbiAgICByZXR1cm4oXG4gICAgICAgIDxkaXYgc3R5bGU9e3t0ZXh0QWxpZ246XCJjZW50ZXJcIn19PlxuICAgICAgICAgICAge2xvYWRpbmdUZXh0fVxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsb2FkZXJcIj48L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIFxuICAgIClcbn0iXSwibmFtZXMiOlsiTG9hZGVyIiwibG9hZGluZ1RleHQiLCJkaXYiLCJzdHlsZSIsInRleHRBbGlnbiIsImNsYXNzTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/Loader.js\n");

/***/ }),

/***/ "./components/ScatterPlot.js":
/*!***********************************!*\
  !*** ./components/ScatterPlot.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AxisBottom: () => (/* binding */ AxisBottom),\n/* harmony export */   AxisLeft: () => (/* binding */ AxisLeft),\n/* harmony export */   \"default\": () => (/* binding */ Scatterplot)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"d3\");\n/* harmony import */ var _D3ColorLegend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./D3ColorLegend */ \"./components/D3ColorLegend.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([d3__WEBPACK_IMPORTED_MODULE_2__, _D3ColorLegend__WEBPACK_IMPORTED_MODULE_3__]);\n([d3__WEBPACK_IMPORTED_MODULE_2__, _D3ColorLegend__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n// tick length\nconst TICK_LENGTH = 20;\nconst AxisBottom = ({ xScale, pixelsPerTick, height })=>{\n    const range = xScale.range();\n    const ticks = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const width = range[1] - range[0];\n        const numberOfTicksTarget = Math.floor(width / pixelsPerTick);\n        return xScale.ticks(numberOfTicksTarget).map((value)=>({\n                value,\n                xOffset: xScale(value)\n            }));\n    }, [\n        xScale,\n        height\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: ticks.map(({ value, xOffset })=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                transform: `translate(${xOffset}, 0)`,\n                shapeRendering: \"crispEdges\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                        y1: TICK_LENGTH,\n                        y2: -height - TICK_LENGTH,\n                        stroke: \"var(--text-color)\",\n                        strokeWidth: 0.5\n                    }, void 0, false, {\n                        fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                        lineNumber: 34,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"text\", {\n                        style: {\n                            fontSize: \"10px\",\n                            textAnchor: \"middle\",\n                            transform: \"translateY(20px)\",\n                            fill: \"var(--text-color)\"\n                        },\n                        children: value\n                    }, value, false, {\n                        fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                        lineNumber: 40,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, value, true, {\n                fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                lineNumber: 29,\n                columnNumber: 9\n            }, undefined))\n    }, void 0, false);\n};\nconst AxisLeft = ({ yScale, pixelsPerTick, width })=>{\n    const range = yScale.range();\n    const ticks = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const height = range[0] - range[1];\n        const numberOfTicksTarget = Math.floor(height / pixelsPerTick);\n        return yScale.ticks(numberOfTicksTarget).map((value)=>({\n                value,\n                yOffset: yScale(value)\n            }));\n    }, [\n        yScale\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: ticks.map(({ value, yOffset })=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                transform: `translate(0, ${yOffset})`,\n                shapeRendering: \"crispEdges\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                        x1: -TICK_LENGTH,\n                        x2: width + TICK_LENGTH,\n                        stroke: \"var(--text-color)\",\n                        strokeWidth: 0.5\n                    }, void 0, false, {\n                        fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                        lineNumber: 78,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"text\", {\n                        style: {\n                            fontSize: \"10px\",\n                            textAnchor: \"middle\",\n                            transform: \"translateX(-20px)\",\n                            fill: \"var(--text-color)\"\n                        },\n                        children: value\n                    }, value, false, {\n                        fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                        lineNumber: 84,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, value, true, {\n                fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                lineNumber: 73,\n                columnNumber: 9\n            }, undefined))\n    }, void 0, false);\n};\nconst MARGIN = {\n    top: 60,\n    right: 60,\n    bottom: 60,\n    left: 60\n};\nfunction Scatterplot({ width, height, data, xAxisTitle = \"Principal Component 1\", yAxisTitle = \"Principal Component 2\", colorProperty = null }) {\n    // Layout. The div size is set by the given props.\n    // The bounds (=area inside the axis) is calculated by subtracting the margins\n    const boundsWidth = width - MARGIN.right - MARGIN.left;\n    const boundsHeight = height - MARGIN.top - MARGIN.bottom;\n    const padding = 4;\n    const xDomain = [\n        d3__WEBPACK_IMPORTED_MODULE_2__.min(data, (d)=>d.y) - padding,\n        d3__WEBPACK_IMPORTED_MODULE_2__.max(data, (d)=>d.y) + padding\n    ];\n    const yDomain = [\n        d3__WEBPACK_IMPORTED_MODULE_2__.min(data, (d)=>d.x) - padding,\n        d3__WEBPACK_IMPORTED_MODULE_2__.max(data, (d)=>d.x) + padding\n    ];\n    const xScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain(xDomain).range([\n        0,\n        boundsWidth\n    ]);\n    const yScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain(yDomain).range([\n        boundsHeight,\n        0\n    ]);\n    const colorScale = d3__WEBPACK_IMPORTED_MODULE_2__.scaleSequential().domain([\n        1,\n        10\n    ]).interpolator(d3__WEBPACK_IMPORTED_MODULE_2__.interpolateSinebow);\n    console.log(colorProperty);\n    // Build the shapes\n    const allShapes = data.map((d, i)=>{\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n            r: 4,\n            cx: xScale(d.y),\n            cy: yScale(d.x),\n            opacity: 1,\n            stroke: colorProperty == null ? \"var(--accent-color)\" : colorScale(colorProperty[i]),\n            fill: colorProperty == null ? \"var(--accent-color)\" : colorScale(colorProperty[i]),\n            fillOpacity: 0.2,\n            strokeWidth: 1\n        }, i, false, {\n            fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n            lineNumber: 130,\n            columnNumber: 7\n        }, this);\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_D3ColorLegend__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                lineNumber: 148,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                width: width,\n                height: height,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                    width: boundsWidth,\n                    height: boundsHeight,\n                    transform: `translate(${[\n                        MARGIN.left,\n                        MARGIN.top\n                    ].join(\",\")})`,\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AxisLeft, {\n                            yScale: yScale,\n                            pixelsPerTick: 40,\n                            width: boundsWidth\n                        }, void 0, false, {\n                            fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                            lineNumber: 157,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                            transform: `translate(0, ${boundsHeight})`,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AxisBottom, {\n                                xScale: xScale,\n                                pixelsPerTick: 40,\n                                height: boundsHeight\n                            }, void 0, false, {\n                                fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                                lineNumber: 162,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                            lineNumber: 159,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"text\", {\n                            x: boundsWidth / 2,\n                            y: boundsHeight + MARGIN.top - 10,\n                            textAnchor: \"middle\",\n                            style: {\n                                fontSize: \"14px\",\n                                fill: \"var(--text-color)\"\n                            },\n                            children: xAxisTitle\n                        }, void 0, false, {\n                            fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                            lineNumber: 170,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"text\", {\n                            transform: `translate(${-MARGIN.left + 20},${boundsHeight / 2}) rotate(-90)`,\n                            textAnchor: \"middle\",\n                            style: {\n                                fontSize: \"14px\",\n                                fill: \"var(--text-color)\"\n                            },\n                            children: yAxisTitle\n                        }, void 0, false, {\n                            fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                            lineNumber: 178,\n                            columnNumber: 11\n                        }, this),\n                        allShapes\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                    lineNumber: 151,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n                lineNumber: 149,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/ScatterPlot.js\",\n        lineNumber: 147,\n        columnNumber: 5\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/ScatterPlot.js\n");

/***/ }),

/***/ "./components/tSNE_Plot.js":
/*!*********************************!*\
  !*** ./components/tSNE_Plot.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TSNEPlot)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_LigandContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/LigandContext */ \"./context/LigandContext.js\");\n/* harmony import */ var _ScatterPlot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ScatterPlot */ \"./components/ScatterPlot.js\");\n/* harmony import */ var _utils_tsne__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/tsne */ \"./components/utils/tsne.js\");\n/* harmony import */ var _utils_tsne__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_utils_tsne__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _Loader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Loader */ \"./components/Loader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_ScatterPlot__WEBPACK_IMPORTED_MODULE_3__]);\n_ScatterPlot__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\nfunction TSNEPlot() {\n    const { ligand } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_context_LigandContext__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n    const [tsneData, setTSNEData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    var opt = {};\n    opt.epsilon = 10;\n    opt.perplexity = 30;\n    opt.dim = 2;\n    var tsne = new _utils_tsne__WEBPACK_IMPORTED_MODULE_4__.tSNE(opt);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setTimeout(()=>{\n            processCompounds();\n        }, 500);\n    }, []);\n    const processCompounds = async ()=>{\n        var fp_storer = ligand.map((obj)=>obj.fingerprint);\n        try {\n            tsne.initDataRaw(fp_storer);\n            for(var k = 0; k < 1000; k++){\n                tsne.step(); // every time you call this, solution gets better\n            }\n            var tsne_data = tsne.getSolution();\n            const tsne_data_in = await tsne_data.map(([x, y])=>({\n                    x,\n                    y\n                }));\n            setTSNEData(tsne_data_in);\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    };\n    if (tsneData === null) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Loader__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/tSNE_Plot.js\",\n                lineNumber: 41,\n                columnNumber: 7\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/tSNE_Plot.js\",\n            lineNumber: 40,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ScatterPlot__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n            data: tsneData,\n            width: 600,\n            height: 600,\n            colorProperty: ligand.map((obj)=>obj.pKi)\n        }, void 0, false, {\n            fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/tSNE_Plot.js\",\n            lineNumber: 47,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/tSNE_Plot.js\",\n        lineNumber: 46,\n        columnNumber: 5\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL3RTTkVfUGxvdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUF3RDtBQUNIO0FBQ2I7QUFDRDtBQUNUO0FBRWYsU0FBU087SUFDdEIsTUFBTSxFQUFFQyxNQUFNLEVBQUUsR0FBR1IsaURBQVVBLENBQUNHLDhEQUFhQTtJQUMzQyxNQUFNLENBQUNNLFVBQVVDLFlBQVksR0FBR1IsK0NBQVFBLENBQUM7SUFHekMsSUFBSVMsTUFBTSxDQUFDO0lBQ1hBLElBQUlDLE9BQU8sR0FBRztJQUNkRCxJQUFJRSxVQUFVLEdBQUc7SUFDakJGLElBQUlHLEdBQUcsR0FBRztJQUNWLElBQUlDLE9BQU8sSUFBSVYsNkNBQVcsQ0FBQ007SUFDM0JWLGdEQUFTQSxDQUFDO1FBQ1JnQixXQUFXO1lBQ1RDO1FBQ0YsR0FBRztJQUNMLEdBQUcsRUFBRTtJQUVILE1BQU1BLG1CQUFtQjtRQUN2QixJQUFJQyxZQUFZWCxPQUFPWSxHQUFHLENBQUMsQ0FBQ0MsTUFBUUEsSUFBSUMsV0FBVztRQUNuRCxJQUFJO1lBQ0ZQLEtBQUtRLFdBQVcsQ0FBQ0o7WUFDakIsSUFBSyxJQUFJSyxJQUFJLEdBQUdBLElBQUksTUFBTUEsSUFBSztnQkFDN0JULEtBQUtVLElBQUksSUFBSSxpREFBaUQ7WUFDaEU7WUFDQSxJQUFJQyxZQUFZWCxLQUFLWSxXQUFXO1lBQ2hDLE1BQU1DLGVBQWUsTUFBTUYsVUFBVU4sR0FBRyxDQUFDLENBQUMsQ0FBQ1MsR0FBR0MsRUFBRSxHQUFNO29CQUFFRDtvQkFBR0M7Z0JBQUU7WUFDN0RwQixZQUFZa0I7UUFDZCxFQUFFLE9BQU9HLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLFVBQVVBO1FBQzFCO0lBQ0Y7SUFFRixJQUFJdEIsYUFBYSxNQUFNO1FBQ3JCLHFCQUNFLDhEQUFDd0I7WUFBSUMsV0FBVTtzQkFDZiw0RUFBQzVCLCtDQUFNQTs7Ozs7Ozs7OztJQUdYO0lBQ0EscUJBQ0UsOERBQUMyQjtRQUFJQyxXQUFVO2tCQUNiLDRFQUFDOUIsb0RBQVdBO1lBQUMrQixNQUFNMUI7WUFBVTJCLE9BQU87WUFBS0MsUUFBUTtZQUFLQyxlQUFlOUIsT0FBT1ksR0FBRyxDQUFDLENBQUNDLE1BQVFBLElBQUlrQixHQUFHOzs7Ozs7Ozs7OztBQUd0RyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHQtYXBwLy4vY29tcG9uZW50cy90U05FX1Bsb3QuanM/ODcwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDb250ZXh0LCB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgTGlnYW5kQ29udGV4dCBmcm9tIFwiLi4vY29udGV4dC9MaWdhbmRDb250ZXh0XCI7XG5pbXBvcnQgU2NhdHRlclBsb3QgZnJvbSAnLi9TY2F0dGVyUGxvdCc7XG5pbXBvcnQgKiBhcyB0c25lanMgZnJvbSAnLi91dGlscy90c25lJztcbmltcG9ydCBMb2FkZXIgZnJvbSBcIi4vTG9hZGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRTTkVQbG90KCkge1xuICBjb25zdCB7IGxpZ2FuZCB9ID0gdXNlQ29udGV4dChMaWdhbmRDb250ZXh0KTtcbiAgY29uc3QgW3RzbmVEYXRhLCBzZXRUU05FRGF0YV0gPSB1c2VTdGF0ZShudWxsKVxuXG4gIFxuICB2YXIgb3B0ID0ge31cbiAgb3B0LmVwc2lsb24gPSAxMDtcbiAgb3B0LnBlcnBsZXhpdHkgPSAzMDtcbiAgb3B0LmRpbSA9IDI7IFxuICB2YXIgdHNuZSA9IG5ldyB0c25lanMudFNORShvcHQpO1xuICB1c2VFZmZlY3QoKCkgPT4geyAgICBcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHByb2Nlc3NDb21wb3VuZHMoKTtcbiAgICB9LCA1MDApXG4gIH0sIFtdKTtcblxuICAgIGNvbnN0IHByb2Nlc3NDb21wb3VuZHMgPSBhc3luYyAoKSA9PiB7XG4gICAgICB2YXIgZnBfc3RvcmVyID0gbGlnYW5kLm1hcCgob2JqKSA9PiBvYmouZmluZ2VycHJpbnQpO1xuICAgICAgdHJ5IHtcbiAgICAgICAgdHNuZS5pbml0RGF0YVJhdyhmcF9zdG9yZXIpO1xuICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IDEwMDA7IGsrKykge1xuICAgICAgICAgIHRzbmUuc3RlcCgpOyAvLyBldmVyeSB0aW1lIHlvdSBjYWxsIHRoaXMsIHNvbHV0aW9uIGdldHMgYmV0dGVyXG4gICAgICAgIH1cbiAgICAgICAgdmFyIHRzbmVfZGF0YSA9IHRzbmUuZ2V0U29sdXRpb24oKTtcbiAgICAgICAgY29uc3QgdHNuZV9kYXRhX2luID0gYXdhaXQgdHNuZV9kYXRhLm1hcCgoW3gsIHldKSA9PiAoeyB4LCB5IH0pKTsgXG4gICAgICAgIHNldFRTTkVEYXRhKHRzbmVfZGF0YV9pbilcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvcjpcIiwgZXJyb3IpO1xuICAgICAgfVxuICAgIH07XG5cbiAgaWYgKHRzbmVEYXRhID09PSBudWxsKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XG4gICAgICA8TG9hZGVyIC8+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgPFNjYXR0ZXJQbG90IGRhdGE9e3RzbmVEYXRhfSB3aWR0aD17NjAwfSBoZWlnaHQ9ezYwMH0gY29sb3JQcm9wZXJ0eT17bGlnYW5kLm1hcCgob2JqKSA9PiBvYmoucEtpKX0vPlxuICAgIDwvZGl2PlxuICApXG59XG4iXSwibmFtZXMiOlsidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiTGlnYW5kQ29udGV4dCIsIlNjYXR0ZXJQbG90IiwidHNuZWpzIiwiTG9hZGVyIiwiVFNORVBsb3QiLCJsaWdhbmQiLCJ0c25lRGF0YSIsInNldFRTTkVEYXRhIiwib3B0IiwiZXBzaWxvbiIsInBlcnBsZXhpdHkiLCJkaW0iLCJ0c25lIiwidFNORSIsInNldFRpbWVvdXQiLCJwcm9jZXNzQ29tcG91bmRzIiwiZnBfc3RvcmVyIiwibWFwIiwib2JqIiwiZmluZ2VycHJpbnQiLCJpbml0RGF0YVJhdyIsImsiLCJzdGVwIiwidHNuZV9kYXRhIiwiZ2V0U29sdXRpb24iLCJ0c25lX2RhdGFfaW4iLCJ4IiwieSIsImVycm9yIiwiY29uc29sZSIsImRpdiIsImNsYXNzTmFtZSIsImRhdGEiLCJ3aWR0aCIsImhlaWdodCIsImNvbG9yUHJvcGVydHkiLCJwS2kiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/tSNE_Plot.js\n");

/***/ }),

/***/ "./components/utils/tsne.js":
/*!**********************************!*\
  !*** ./components/utils/tsne.js ***!
  \**********************************/
/***/ ((module) => {

eval("// create main global object\n\nvar tsnejs = tsnejs || {\n    REVISION: \"ALPHA\"\n};\n(function(global) {\n    \"use strict\";\n    // utility function\n    var assert = function(condition, message) {\n        if (!condition) {\n            throw message || \"Assertion failed\";\n        }\n    };\n    // syntax sugar\n    var getopt = function(opt, field, defaultval) {\n        if (opt.hasOwnProperty(field)) {\n            return opt[field];\n        } else {\n            return defaultval;\n        }\n    };\n    // return 0 mean unit standard deviation random number\n    var return_v = false;\n    var v_val = 0.0;\n    var gaussRandom = function() {\n        if (return_v) {\n            return_v = false;\n            return v_val;\n        }\n        var u = 2 * Math.random() - 1;\n        var v = 2 * Math.random() - 1;\n        var r = u * u + v * v;\n        if (r == 0 || r > 1) return gaussRandom();\n        var c = Math.sqrt(-2 * Math.log(r) / r);\n        v_val = v * c; // cache this for next function call for efficiency\n        return_v = true;\n        return u * c;\n    };\n    // return random normal number\n    var randn = function(mu, std) {\n        return mu + gaussRandom() * std;\n    };\n    // utilitity that creates contiguous vector of zeros of size n\n    var zeros = function(n) {\n        if (typeof n === \"undefined\" || isNaN(n)) {\n            return [];\n        }\n        if (typeof ArrayBuffer === \"undefined\") {\n            // lacking browser support\n            var arr = new Array(n);\n            for(var i = 0; i < n; i++){\n                arr[i] = 0;\n            }\n            return arr;\n        } else {\n            return new Float64Array(n); // typed arrays are faster\n        }\n    };\n    // utility that returns 2d array filled with random numbers\n    // or with value s, if provided\n    var randn2d = function(n, d, s) {\n        var uses = typeof s !== \"undefined\";\n        var x = [];\n        for(var i = 0; i < n; i++){\n            var xhere = [];\n            for(var j = 0; j < d; j++){\n                if (uses) {\n                    xhere.push(s);\n                } else {\n                    xhere.push(randn(0.0, 1e-4));\n                }\n            }\n            x.push(xhere);\n        }\n        return x;\n    };\n    // compute L2 distance between two vectors\n    var L2 = function(x1, x2) {\n        var D = x1.length;\n        var d = 0;\n        for(var i = 0; i < D; i++){\n            var x1i = x1[i];\n            var x2i = x2[i];\n            d += (x1i - x2i) * (x1i - x2i);\n        }\n        return d;\n    };\n    // compute pairwise distance in all vectors in X\n    var xtod = function(X) {\n        var N = X.length;\n        var dist = zeros(N * N); // allocate contiguous array\n        for(var i = 0; i < N; i++){\n            for(var j = i + 1; j < N; j++){\n                var d = L2(X[i], X[j]);\n                dist[i * N + j] = d;\n                dist[j * N + i] = d;\n            }\n        }\n        return dist;\n    };\n    // compute (p_{i|j} + p_{j|i})/(2n)\n    var d2p = function(D, perplexity, tol) {\n        var Nf = Math.sqrt(D.length); // this better be an integer\n        var N = Math.floor(Nf);\n        assert(N === Nf, \"D should have square number of elements.\");\n        var Htarget = Math.log(perplexity); // target entropy of distribution\n        var P = zeros(N * N); // temporary probability matrix\n        var prow = zeros(N); // a temporary storage compartment\n        for(var i = 0; i < N; i++){\n            var betamin = -Infinity;\n            var betamax = Infinity;\n            var beta = 1; // initial value of precision\n            var done = false;\n            var maxtries = 50;\n            // perform binary search to find a suitable precision beta\n            // so that the entropy of the distribution is appropriate\n            var num = 0;\n            while(!done){\n                //debugger;\n                // compute entropy and kernel row with beta precision\n                var psum = 0.0;\n                for(var j = 0; j < N; j++){\n                    var pj = Math.exp(-D[i * N + j] * beta);\n                    if (i === j) {\n                        pj = 0;\n                    } // we dont care about diagonals\n                    prow[j] = pj;\n                    psum += pj;\n                }\n                // normalize p and compute entropy\n                var Hhere = 0.0;\n                for(var j = 0; j < N; j++){\n                    if (psum == 0) {\n                        var pj = 0;\n                    } else {\n                        var pj = prow[j] / psum;\n                    }\n                    prow[j] = pj;\n                    if (pj > 1e-7) Hhere -= pj * Math.log(pj);\n                }\n                // adjust beta based on result\n                if (Hhere > Htarget) {\n                    // entropy was too high (distribution too diffuse)\n                    // so we need to increase the precision for more peaky distribution\n                    betamin = beta; // move up the bounds\n                    if (betamax === Infinity) {\n                        beta = beta * 2;\n                    } else {\n                        beta = (beta + betamax) / 2;\n                    }\n                } else {\n                    // converse case. make distrubtion less peaky\n                    betamax = beta;\n                    if (betamin === -Infinity) {\n                        beta = beta / 2;\n                    } else {\n                        beta = (beta + betamin) / 2;\n                    }\n                }\n                // stopping conditions: too many tries or got a good precision\n                num++;\n                if (Math.abs(Hhere - Htarget) < tol) {\n                    done = true;\n                }\n                if (num >= maxtries) {\n                    done = true;\n                }\n            }\n            // console.log('data point ' + i + ' gets precision ' + beta + ' after ' + num + ' binary search steps.');\n            // copy over the final prow to P at row i\n            for(var j = 0; j < N; j++){\n                P[i * N + j] = prow[j];\n            }\n        } // end loop over examples i\n        // symmetrize P and normalize it to sum to 1 over all ij\n        var Pout = zeros(N * N);\n        var N2 = N * 2;\n        for(var i = 0; i < N; i++){\n            for(var j = 0; j < N; j++){\n                Pout[i * N + j] = Math.max((P[i * N + j] + P[j * N + i]) / N2, 1e-100);\n            }\n        }\n        return Pout;\n    };\n    // helper function\n    function sign(x) {\n        return x > 0 ? 1 : x < 0 ? -1 : 0;\n    }\n    var tSNE = function(opt) {\n        var opt = opt || {};\n        this.perplexity = getopt(opt, \"perplexity\", 30); // effective number of nearest neighbors\n        this.dim = getopt(opt, \"dim\", 2); // by default 2-D tSNE\n        this.epsilon = getopt(opt, \"epsilon\", 10); // learning rate\n        this.iter = 0;\n    };\n    tSNE.prototype = {\n        // this function takes a set of high-dimensional points\n        // and creates matrix P from them using gaussian kernel\n        initDataRaw: function(X) {\n            var N = X.length;\n            var D = X[0].length;\n            assert(N > 0, \" X is empty? You must have some data!\");\n            assert(D > 0, \" X[0] is empty? Where is the data?\");\n            var dists = xtod(X); // convert X to distances using gaussian kernel\n            this.P = d2p(dists, this.perplexity, 1e-4); // attach to object\n            this.N = N; // back up the size of the dataset\n            this.initSolution(); // refresh this\n        },\n        // this function takes a given distance matrix and creates\n        // matrix P from them.\n        // D is assumed to be provided as a list of lists, and should be symmetric\n        initDataDist: function(D) {\n            var N = D.length;\n            assert(N > 0, \" X is empty? You must have some data!\");\n            // convert D to a (fast) typed array version\n            var dists = zeros(N * N); // allocate contiguous array\n            for(var i = 0; i < N; i++){\n                for(var j = i + 1; j < N; j++){\n                    var d = D[i][j];\n                    dists[i * N + j] = d;\n                    dists[j * N + i] = d;\n                }\n            }\n            this.P = d2p(dists, this.perplexity, 1e-4);\n            this.N = N;\n            this.initSolution(); // refresh this\n        },\n        // (re)initializes the solution to random\n        initSolution: function() {\n            // generate random solution to t-SNE\n            this.Y = randn2d(this.N, this.dim); // the solution\n            this.gains = randn2d(this.N, this.dim, 1.0); // step gains to accelerate progress in unchanging directions\n            this.ystep = randn2d(this.N, this.dim, 0.0); // momentum accumulator\n            this.iter = 0;\n        },\n        // return pointer to current solution\n        getSolution: function() {\n            return this.Y;\n        },\n        // perform a single step of optimization to improve the embedding\n        step: function() {\n            this.iter += 1;\n            var N = this.N;\n            var cg = this.costGrad(this.Y); // evaluate gradient\n            var cost = cg.cost;\n            var grad = cg.grad;\n            // perform gradient step\n            var ymean = zeros(this.dim);\n            for(var i = 0; i < N; i++){\n                for(var d = 0; d < this.dim; d++){\n                    var gid = grad[i][d];\n                    var sid = this.ystep[i][d];\n                    var gainid = this.gains[i][d];\n                    // compute gain update\n                    var newgain = sign(gid) === sign(sid) ? gainid * 0.8 : gainid + 0.2;\n                    if (newgain < 0.01) newgain = 0.01; // clamp\n                    this.gains[i][d] = newgain; // store for next turn\n                    // compute momentum step direction\n                    var momval = this.iter < 250 ? 0.5 : 0.8;\n                    var newsid = momval * sid - this.epsilon * newgain * grad[i][d];\n                    this.ystep[i][d] = newsid; // remember the step we took\n                    // step!\n                    this.Y[i][d] += newsid;\n                    ymean[d] += this.Y[i][d]; // accumulate mean so that we can center later\n                }\n            }\n            // reproject Y to be zero mean\n            for(var i = 0; i < N; i++){\n                for(var d = 0; d < this.dim; d++){\n                    this.Y[i][d] -= ymean[d] / N;\n                }\n            }\n            //if(this.iter%100===0) console.log('iter ' + this.iter + ', cost: ' + cost);\n            return cost; // return current cost\n        },\n        // for debugging: gradient check\n        debugGrad: function() {\n            var N = this.N;\n            var cg = this.costGrad(this.Y); // evaluate gradient\n            var cost = cg.cost;\n            var grad = cg.grad;\n            var e = 1e-5;\n            for(var i = 0; i < N; i++){\n                for(var d = 0; d < this.dim; d++){\n                    var yold = this.Y[i][d];\n                    this.Y[i][d] = yold + e;\n                    var cg0 = this.costGrad(this.Y);\n                    this.Y[i][d] = yold - e;\n                    var cg1 = this.costGrad(this.Y);\n                    var analytic = grad[i][d];\n                    var numerical = (cg0.cost - cg1.cost) / (2 * e);\n                    console.log(i + \",\" + d + \": gradcheck analytic: \" + analytic + \" vs. numerical: \" + numerical);\n                    this.Y[i][d] = yold;\n                }\n            }\n        },\n        // return cost and gradient, given an arrangement\n        costGrad: function(Y) {\n            var N = this.N;\n            var dim = this.dim; // dim of output space\n            var P = this.P;\n            var pmul = this.iter < 100 ? 4 : 1; // trick that helps with local optima\n            // compute current Q distribution, unnormalized first\n            var Qu = zeros(N * N);\n            var qsum = 0.0;\n            for(var i = 0; i < N; i++){\n                for(var j = i + 1; j < N; j++){\n                    var dsum = 0.0;\n                    for(var d = 0; d < dim; d++){\n                        var dhere = Y[i][d] - Y[j][d];\n                        dsum += dhere * dhere;\n                    }\n                    var qu = 1.0 / (1.0 + dsum); // Student t-distribution\n                    Qu[i * N + j] = qu;\n                    Qu[j * N + i] = qu;\n                    qsum += 2 * qu;\n                }\n            }\n            // normalize Q distribution to sum to 1\n            var NN = N * N;\n            var Q = zeros(NN);\n            for(var q = 0; q < NN; q++){\n                Q[q] = Math.max(Qu[q] / qsum, 1e-100);\n            }\n            var cost = 0.0;\n            var grad = [];\n            for(var i = 0; i < N; i++){\n                var gsum = new Array(dim); // init grad for point i\n                for(var d = 0; d < dim; d++){\n                    gsum[d] = 0.0;\n                }\n                for(var j = 0; j < N; j++){\n                    cost += -P[i * N + j] * Math.log(Q[i * N + j]); // accumulate cost (the non-constant portion at least...)\n                    var premult = 4 * (pmul * P[i * N + j] - Q[i * N + j]) * Qu[i * N + j];\n                    for(var d = 0; d < dim; d++){\n                        gsum[d] += premult * (Y[i][d] - Y[j][d]);\n                    }\n                }\n                grad.push(gsum);\n            }\n            return {\n                cost: cost,\n                grad: grad\n            };\n        }\n    };\n    global.tSNE = tSNE; // export tSNE class\n})(tsnejs);\n// export the library to window, or to module in nodejs\n(function(lib) {\n    \"use strict\";\n    if ( false || typeof module.exports === \"undefined\") {\n        window.tsnejs = lib; // in ordinary browser attach library to window\n    } else {\n        module.exports = lib; // in nodejs\n    }\n})(tsnejs);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/utils/tsne.js\n");

/***/ })

};
;