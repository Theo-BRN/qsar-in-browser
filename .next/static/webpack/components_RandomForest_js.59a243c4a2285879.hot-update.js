"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_RandomForest_js",{

/***/ "./components/BarChart.js":
/*!********************************!*\
  !*** ./components/BarChart.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"./node_modules/d3/src/index.js\");\n\nvar _s = $RefreshSig$();\n\n\nconst GroupedBarChart = (param)=>{\n    let { mae, r2 } = param;\n    _s();\n    // Check if both mae and r2 are provided and have the same length\n    if (!mae || !r2 || mae.length !== r2.length) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: \"Error: Both mae and r2 arrays are required and must have the same length.\"\n        }, void 0, false, {\n            fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/BarChart.js\",\n            lineNumber: 7,\n            columnNumber: 12\n        }, undefined);\n    }\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // set the dimensions and margins of the graph\n        const margin = {\n            top: 10,\n            right: 30,\n            bottom: 40,\n            left: 70\n        }, width = 800 - margin.left - margin.right, height = 400 - margin.top - margin.bottom;\n        const svgElement = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).select(\"svg\");\n        if (svgElement.empty()) {\n            // append the svg object to the body of the page\n            const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\".concat(margin.left, \",\").concat(margin.top, \")\"));\n            // Calculate folds based on the length of the arrays\n            const folds = Array.from({\n                length: mae.length\n            }, (_, i)=>\"fold\".concat(i + 1));\n            // List of subgroups\n            const subgroups = [\n                \"MAE\",\n                \"R2\"\n            ];\n            // Add X axis\n            const x = d3__WEBPACK_IMPORTED_MODULE_2__.scaleBand().domain(folds).range([\n                0,\n                width\n            ]).padding([\n                0.2\n            ]);\n            svg.append(\"g\").attr(\"transform\", \"translate(0, \".concat(height, \")\")).call(d3__WEBPACK_IMPORTED_MODULE_2__.axisBottom(x).tickSize(0));\n            // Add Y axis\n            const y = d3__WEBPACK_IMPORTED_MODULE_2__.scaleLinear().domain([\n                0,\n                d3__WEBPACK_IMPORTED_MODULE_2__.max([\n                    ...mae,\n                    ...r2\n                ])\n            ]).range([\n                height,\n                -10\n            ]);\n            svg.append(\"g\").call(d3__WEBPACK_IMPORTED_MODULE_2__.axisLeft(y));\n            // Another scale for subgroup position\n            const xSubgroup = d3__WEBPACK_IMPORTED_MODULE_2__.scaleBand().domain(subgroups).range([\n                0,\n                x.bandwidth()\n            ]).padding([\n                0.05\n            ]);\n            // color palette = one color per subgroup\n            const color = d3__WEBPACK_IMPORTED_MODULE_2__.scaleOrdinal().domain(subgroups).range([\n                \"#e41a1c\",\n                \"#377eb8\"\n            ]);\n            // Show the bars\n            svg.append(\"g\").selectAll(\"g\").data(folds).join(\"g\").attr(\"transform\", (d)=>\"translate(\".concat(x(d), \", 0)\")).selectAll(\"rect\").data(function(d, i) {\n                return subgroups.map((key)=>({\n                        key,\n                        value: key === \"MAE\" ? mae[i] : r2[i]\n                    }));\n            }).join(\"rect\").attr(\"x\", (d)=>xSubgroup(d.key)).attr(\"y\", (d)=>y(d.value)).attr(\"width\", xSubgroup.bandwidth()).attr(\"height\", (d)=>height - y(d.value)).attr(\"fill\", (d)=>color(d.key));\n            // Add legend\n            const legend = svg.append(\"g\").attr(\"transform\", \"translate(\".concat(width - 30, \", 0)\"));\n            legend.selectAll(\"rect\").data(subgroups).enter().append(\"rect\").attr(\"x\", 0).attr(\"y\", (d, i)=>i * 20).attr(\"width\", 20).attr(\"height\", 10).attr(\"fill\", (d)=>color(d));\n            legend.selectAll(\"text\").data(subgroups).enter().append(\"text\").attr(\"x\", 30).attr(\"y\", (d, i)=>i * 20 + 8).text((d)=>d).style(\"font-size\", \"12px\").style(\"fill\", \"black\");\n        }\n    }, [\n        mae,\n        r2\n    ]); // dependencies include mae and r2 arrays\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        id: \"my_dataviz\",\n        ref: svgRef\n    }, void 0, false, {\n        fileName: \"/Users/syedzayyanmasud/Desktop/prog/qsar_js/components/BarChart.js\",\n        lineNumber: 106,\n        columnNumber: 5\n    }, undefined);\n};\n_s(GroupedBarChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = GroupedBarChart;\n/* harmony default export */ __webpack_exports__[\"default\"] = (GroupedBarChart);\nvar _c;\n$RefreshReg$(_c, \"GroupedBarChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QixJQUFJLENBQUNOLENBQUFBLElBQUtBLEdBQ1ZPLEtBQUssQ0FBQyxhQUFhLFFBQ25CQSxLQUFLLENBQUMsUUFBUTtRQUNuQjtJQUNGLEdBQUc7UUFBQ25EO1FBQUtDO0tBQUcsR0FBRyx5Q0FBeUM7SUFFeEQscUJBQ0UsOERBQUNFO1FBQUlpRCxJQUFHO1FBQWFDLEtBQUtqRDs7Ozs7O0FBSTlCO0dBMUdNTDtLQUFBQTtBQTRHTiwrREFBZUEsZUFBZUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL0JhckNoYXJ0LmpzP2YxOWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnO1xuXG5jb25zdCBHcm91cGVkQmFyQ2hhcnQgPSAoeyBtYWUsIHIyIH0pID0+IHtcbiAgLy8gQ2hlY2sgaWYgYm90aCBtYWUgYW5kIHIyIGFyZSBwcm92aWRlZCBhbmQgaGF2ZSB0aGUgc2FtZSBsZW5ndGhcbiAgaWYgKCFtYWUgfHwgIXIyIHx8IG1hZS5sZW5ndGggIT09IHIyLmxlbmd0aCkge1xuICAgIHJldHVybiA8ZGl2PkVycm9yOiBCb3RoIG1hZSBhbmQgcjIgYXJyYXlzIGFyZSByZXF1aXJlZCBhbmQgbXVzdCBoYXZlIHRoZSBzYW1lIGxlbmd0aC48L2Rpdj47XG4gIH1cblxuICBjb25zdCBzdmdSZWYgPSB1c2VSZWYoKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIHNldCB0aGUgZGltZW5zaW9ucyBhbmQgbWFyZ2lucyBvZiB0aGUgZ3JhcGhcbiAgICBjb25zdCBtYXJnaW4gPSB7IHRvcDogMTAsIHJpZ2h0OiAzMCwgYm90dG9tOiA0MCwgbGVmdDogNzAgfSwgLy8gSW5jcmVhc2VkIGxlZnQgbWFyZ2luIGZvciB0aGUgbGVnZW5kXG4gICAgICB3aWR0aCA9IDgwMCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0LFxuICAgICAgaGVpZ2h0ID0gNDAwIC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b207XG5cbiAgICBjb25zdCBzdmdFbGVtZW50ID0gZDMuc2VsZWN0KHN2Z1JlZi5jdXJyZW50KS5zZWxlY3QoXCJzdmdcIik7XG5cbiAgICBpZiAoc3ZnRWxlbWVudC5lbXB0eSgpKSB7XG4gICAgICAvLyBhcHBlbmQgdGhlIHN2ZyBvYmplY3QgdG8gdGhlIGJvZHkgb2YgdGhlIHBhZ2VcbiAgICAgIGNvbnN0IHN2ZyA9IGQzLnNlbGVjdChzdmdSZWYuY3VycmVudClcbiAgICAgICAgLmFwcGVuZChcInN2Z1wiKVxuICAgICAgICAuYXR0cihcIndpZHRoXCIsIHdpZHRoICsgbWFyZ2luLmxlZnQgKyBtYXJnaW4ucmlnaHQpXG4gICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIGhlaWdodCArIG1hcmdpbi50b3AgKyBtYXJnaW4uYm90dG9tKVxuICAgICAgICAuYXBwZW5kKFwiZ1wiKVxuICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBgdHJhbnNsYXRlKCR7bWFyZ2luLmxlZnR9LCR7bWFyZ2luLnRvcH0pYCk7XG5cbiAgICAgIC8vIENhbGN1bGF0ZSBmb2xkcyBiYXNlZCBvbiB0aGUgbGVuZ3RoIG9mIHRoZSBhcnJheXNcbiAgICAgIGNvbnN0IGZvbGRzID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogbWFlLmxlbmd0aCB9LCAoXywgaSkgPT4gYGZvbGQke2kgKyAxfWApO1xuXG4gICAgICAvLyBMaXN0IG9mIHN1Ymdyb3Vwc1xuICAgICAgY29uc3Qgc3ViZ3JvdXBzID0gWydNQUUnLCAnUjInXTtcblxuICAgICAgLy8gQWRkIFggYXhpc1xuICAgICAgY29uc3QgeCA9IGQzLnNjYWxlQmFuZCgpXG4gICAgICAgIC5kb21haW4oZm9sZHMpXG4gICAgICAgIC5yYW5nZShbMCwgd2lkdGhdKVxuICAgICAgICAucGFkZGluZyhbMC4yXSk7XG4gICAgICBzdmcuYXBwZW5kKFwiZ1wiKVxuICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBgdHJhbnNsYXRlKDAsICR7aGVpZ2h0fSlgKVxuICAgICAgICAuY2FsbChkMy5heGlzQm90dG9tKHgpLnRpY2tTaXplKDApKTtcblxuICAgICAgLy8gQWRkIFkgYXhpc1xuICAgICAgY29uc3QgeSA9IGQzLnNjYWxlTGluZWFyKClcbiAgICAgICAgLmRvbWFpbihbMCwgZDMubWF4KFsuLi5tYWUsIC4uLnIyXSldKVxuICAgICAgICAucmFuZ2UoW2hlaWdodCwgLTEwXSk7XG4gICAgICBzdmcuYXBwZW5kKFwiZ1wiKVxuICAgICAgICAuY2FsbChkMy5heGlzTGVmdCh5KSk7XG5cbiAgICAgIC8vIEFub3RoZXIgc2NhbGUgZm9yIHN1Ymdyb3VwIHBvc2l0aW9uXG4gICAgICBjb25zdCB4U3ViZ3JvdXAgPSBkMy5zY2FsZUJhbmQoKVxuICAgICAgICAuZG9tYWluKHN1Ymdyb3VwcylcbiAgICAgICAgLnJhbmdlKFswLCB4LmJhbmR3aWR0aCgpXSlcbiAgICAgICAgLnBhZGRpbmcoWzAuMDVdKTtcblxuICAgICAgLy8gY29sb3IgcGFsZXR0ZSA9IG9uZSBjb2xvciBwZXIgc3ViZ3JvdXBcbiAgICAgIGNvbnN0IGNvbG9yID0gZDMuc2NhbGVPcmRpbmFsKClcbiAgICAgICAgLmRvbWFpbihzdWJncm91cHMpXG4gICAgICAgIC5yYW5nZShbJyNlNDFhMWMnLCAnIzM3N2ViOCddKTtcblxuICAgICAgLy8gU2hvdyB0aGUgYmFyc1xuICAgICAgc3ZnLmFwcGVuZChcImdcIilcbiAgICAgICAgLnNlbGVjdEFsbChcImdcIilcbiAgICAgICAgLmRhdGEoZm9sZHMpXG4gICAgICAgIC5qb2luKFwiZ1wiKVxuICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBkID0+IGB0cmFuc2xhdGUoJHt4KGQpfSwgMClgKVxuICAgICAgICAuc2VsZWN0QWxsKFwicmVjdFwiKVxuICAgICAgICAuZGF0YShmdW5jdGlvbiAoZCwgaSkge1xuICAgICAgICAgIHJldHVybiBzdWJncm91cHMubWFwKGtleSA9PiAoeyBrZXksIHZhbHVlOiAoa2V5ID09PSAnTUFFJyA/IG1hZVtpXSA6IHIyW2ldKSB9KSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5qb2luKFwicmVjdFwiKVxuICAgICAgICAuYXR0cihcInhcIiwgZCA9PiB4U3ViZ3JvdXAoZC5rZXkpKVxuICAgICAgICAuYXR0cihcInlcIiwgZCA9PiB5KGQudmFsdWUpKVxuICAgICAgICAuYXR0cihcIndpZHRoXCIsIHhTdWJncm91cC5iYW5kd2lkdGgoKSlcbiAgICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgZCA9PiBoZWlnaHQgLSB5KGQudmFsdWUpKVxuICAgICAgICAuYXR0cihcImZpbGxcIiwgZCA9PiBjb2xvcihkLmtleSkpO1xuXG4gICAgICAvLyBBZGQgbGVnZW5kXG4gICAgICBjb25zdCBsZWdlbmQgPSBzdmcuYXBwZW5kKFwiZ1wiKVxuICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBgdHJhbnNsYXRlKCR7d2lkdGggLSAzMH0sIDApYCk7XG5cbiAgICAgIGxlZ2VuZC5zZWxlY3RBbGwoXCJyZWN0XCIpXG4gICAgICAgIC5kYXRhKHN1Ymdyb3VwcylcbiAgICAgICAgLmVudGVyKClcbiAgICAgICAgLmFwcGVuZChcInJlY3RcIilcbiAgICAgICAgLmF0dHIoXCJ4XCIsIDApXG4gICAgICAgIC5hdHRyKFwieVwiLCAoZCwgaSkgPT4gaSAqIDIwKVxuICAgICAgICAuYXR0cihcIndpZHRoXCIsIDIwKVxuICAgICAgICAuYXR0cihcImhlaWdodFwiLCAxMClcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIGQgPT4gY29sb3IoZCkpO1xuXG4gICAgICBsZWdlbmQuc2VsZWN0QWxsKFwidGV4dFwiKVxuICAgICAgICAuZGF0YShzdWJncm91cHMpXG4gICAgICAgIC5lbnRlcigpXG4gICAgICAgIC5hcHBlbmQoXCJ0ZXh0XCIpXG4gICAgICAgIC5hdHRyKFwieFwiLCAzMClcbiAgICAgICAgLmF0dHIoXCJ5XCIsIChkLCBpKSA9PiBpICogMjAgKyA4KVxuICAgICAgICAudGV4dChkID0+IGQpXG4gICAgICAgIC5zdHlsZShcImZvbnQtc2l6ZVwiLCBcIjEycHhcIilcbiAgICAgICAgLnN0eWxlKFwiZmlsbFwiLCBcImJsYWNrXCIpO1xuICAgIH1cbiAgfSwgW21hZSwgcjJdKTsgLy8gZGVwZW5kZW5jaWVzIGluY2x1ZGUgbWFlIGFuZCByMiBhcnJheXNcblxuICByZXR1cm4gKFxuICAgIDxkaXYgaWQ9XCJteV9kYXRhdml6XCIgcmVmPXtzdmdSZWZ9PlxuICAgICAgey8qIFNWRyB3aWxsIGJlIHJlbmRlcmVkIGhlcmUgKi99XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBHcm91cGVkQmFyQ2hhcnQ7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJkMyIsIkdyb3VwZWRCYXJDaGFydCIsIm1hZSIsInIyIiwibGVuZ3RoIiwiZGl2Iiwic3ZnUmVmIiwibWFyZ2luIiwidG9wIiwicmlnaHQiLCJib3R0b20iLCJsZWZ0Iiwid2lkdGgiLCJoZWlnaHQiLCJzdmdFbGVtZW50Iiwic2VsZWN0IiwiY3VycmVudCIsImVtcHR5Iiwic3ZnIiwiYXBwZW5kIiwiYXR0ciIsImZvbGRzIiwiQXJyYXkiLCJmcm9tIiwiXyIsImkiLCJzdWJncm91cHMiLCJ4Iiwic2NhbGVCYW5kIiwiZG9tYWluIiwicmFuZ2UiLCJwYWRkaW5nIiwiY2FsbCIsImF4aXNCb3R0b20iLCJ0aWNrU2l6ZSIsInkiLCJzY2FsZUxpbmVhciIsIm1heCIsImF4aXNMZWZ0IiwieFN1Ymdyb3VwIiwiYmFuZHdpZHRoIiwiY29sb3IiLCJzY2FsZU9yZGluYWwiLCJzZWxlY3RBbGwiLCJkYXRhIiwiam9pbiIsImQiLCJtYXAiLCJrZXkiLCJ2YWx1ZSIsImxlZ2VuZCIsImVudGVyIiwidGV4dCIsInN0eWxlIiwiaWQiLCJyZWYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/BarChart.js\n"));

/***/ })

});