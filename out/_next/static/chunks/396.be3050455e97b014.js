"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[396],{44091:function(t,r,e){e.r(r),e.d(r,{isAnyArray:function(){return isAnyArray}});let s=Object.prototype.toString;function isAnyArray(t){let r=s.call(t);return r.endsWith("Array]")&&!r.includes("Big")}},75823:function(t,r,e){e.r(r),e.d(r,{default:function(){return rescale}});var s=e(44091);function rescale(t){var r,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if((0,s.isAnyArray)(t)){if(0===t.length)throw TypeError("input must not be empty")}else throw TypeError("input must be an array");if(void 0!==e.output){if(!(0,s.isAnyArray)(e.output))throw TypeError("output option must be an array if specified");r=e.output}else r=Array(t.length);var i=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(0,s.isAnyArray)(t))throw TypeError("input must be an array");if(0===t.length)throw TypeError("input must not be empty");var e=r.fromIndex,i=void 0===e?0:e,o=r.toIndex,n=void 0===o?t.length:o;if(i<0||i>=t.length||!Number.isInteger(i))throw Error("fromIndex must be a positive integer smaller than length");if(n<=i||n>t.length||!Number.isInteger(n))throw Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var a=t[i],h=i+1;h<n;h++)t[h]<a&&(a=t[h]);return a}(t),o=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(0,s.isAnyArray)(t))throw TypeError("input must be an array");if(0===t.length)throw TypeError("input must not be empty");var e=r.fromIndex,i=void 0===e?0:e,o=r.toIndex,n=void 0===o?t.length:o;if(i<0||i>=t.length||!Number.isInteger(i))throw Error("fromIndex must be a positive integer smaller than length");if(n<=i||n>t.length||!Number.isInteger(n))throw Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var a=t[i],h=i+1;h<n;h++)t[h]>a&&(a=t[h]);return a}(t);if(i===o)throw RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var n=e.min,a=void 0===n?e.autoMinMax?i:0:n,h=e.max,l=void 0===h?e.autoMinMax?o:1:h;if(a>=l)throw RangeError("min option must be smaller than max option");for(var u=(l-a)/(o-i),c=0;c<t.length;c++)r[c]=(t[c]-i)*u+a;return r}},78406:function(t,r,e){var s=e(44091),i=e(75823);let o=" ".repeat(2),n=" ".repeat(4);function inspectMatrixWithOptions(t,r={}){let{maxRows:e=15,maxColumns:s=10,maxNumSize:i=8,padMinus:a="auto"}=r;return`${t.constructor.name} {
${o}[
${n}${function(t,r,e,s,i){let{rows:o,columns:a}=t,h=Math.min(o,r),l=Math.min(a,e),u=[];if("auto"===i){i=!1;t:for(let r=0;r<h;r++)for(let e=0;e<l;e++)if(0>t.get(r,e)){i=!0;break t}}for(let r=0;r<h;r++){let e=[];for(let o=0;o<l;o++){var c,f;e.push((c=t.get(r,o),f=i,(c>=0&&f?` ${formatNumber2(c,s-1)}`:formatNumber2(c,s)).padEnd(s)))}u.push(`${e.join(" ")}`)}return l!==a&&(u[u.length-1]+=` ... ${a-e} more columns`),h!==o&&u.push(`... ${o-r} more rows`),u.join(`
${n}`)}(t,e,s,i,a)}
${o}]
${o}rows: ${t.rows}
${o}columns: ${t.columns}
}`}function formatNumber2(t,r){let e=t.toString();if(e.length<=r)return e;let s=t.toFixed(r);if(s.length>r&&(s=t.toFixed(Math.max(0,r-(s.length-r)))),s.length<=r&&!s.startsWith("0.000")&&!s.startsWith("-0.000"))return s;let i=t.toExponential(r);return i.length>r&&(i=t.toExponential(Math.max(0,r-(i.length-r)))),i.slice(0)}function checkRowIndex(t,r,e){let s=e?t.rows:t.rows-1;if(r<0||r>s)throw RangeError("Row index out of range")}function checkColumnIndex(t,r,e){let s=e?t.columns:t.columns-1;if(r<0||r>s)throw RangeError("Column index out of range")}function checkRowVector(t,r){if(r.to1DArray&&(r=r.to1DArray()),r.length!==t.columns)throw RangeError("vector size must be the same as the number of columns");return r}function checkColumnVector(t,r){if(r.to1DArray&&(r=r.to1DArray()),r.length!==t.rows)throw RangeError("vector size must be the same as the number of rows");return r}function checkRowIndices(t,r){if(!s.isAnyArray(r))throw TypeError("row indices must be an array");for(let e=0;e<r.length;e++)if(r[e]<0||r[e]>=t.rows)throw RangeError("row indices are out of range")}function checkColumnIndices(t,r){if(!s.isAnyArray(r))throw TypeError("column indices must be an array");for(let e=0;e<r.length;e++)if(r[e]<0||r[e]>=t.columns)throw RangeError("column indices are out of range")}function checkRange(t,r,e,s,i){if(5!=arguments.length)throw RangeError("expected 4 arguments");if(checkNumber("startRow",r),checkNumber("endRow",e),checkNumber("startColumn",s),checkNumber("endColumn",i),r>e||s>i||r<0||r>=t.rows||e<0||e>=t.rows||s<0||s>=t.columns||i<0||i>=t.columns)throw RangeError("Submatrix indices are out of range")}function newArray(t,r=0){let e=[];for(let s=0;s<t;s++)e.push(r);return e}function checkNumber(t,r){if("number"!=typeof r)throw TypeError(`${t} must be a number`)}function checkNonEmpty(t){if(t.isEmpty())throw Error("Empty matrix has no elements to index")}let AbstractMatrix=class AbstractMatrix{static from1DArray(t,r,e){if(t*r!==e.length)throw RangeError("data length does not match given dimensions");let s=new Matrix(t,r);for(let i=0;i<t;i++)for(let t=0;t<r;t++)s.set(i,t,e[i*r+t]);return s}static rowVector(t){let r=new Matrix(1,t.length);for(let e=0;e<t.length;e++)r.set(0,e,t[e]);return r}static columnVector(t){let r=new Matrix(t.length,1);for(let e=0;e<t.length;e++)r.set(e,0,t[e]);return r}static zeros(t,r){return new Matrix(t,r)}static ones(t,r){return new Matrix(t,r).fill(1)}static rand(t,r,e={}){if("object"!=typeof e)throw TypeError("options must be an object");let{random:s=Math.random}=e,i=new Matrix(t,r);for(let e=0;e<t;e++)for(let t=0;t<r;t++)i.set(e,t,s());return i}static randInt(t,r,e={}){if("object"!=typeof e)throw TypeError("options must be an object");let{min:s=0,max:i=1e3,random:o=Math.random}=e;if(!Number.isInteger(s))throw TypeError("min must be an integer");if(!Number.isInteger(i))throw TypeError("max must be an integer");if(s>=i)throw RangeError("min must be smaller than max");let n=i-s,a=new Matrix(t,r);for(let e=0;e<t;e++)for(let t=0;t<r;t++){let r=s+Math.round(o()*n);a.set(e,t,r)}return a}static eye(t,r,e){void 0===r&&(r=t),void 0===e&&(e=1);let s=Math.min(t,r),i=this.zeros(t,r);for(let t=0;t<s;t++)i.set(t,t,e);return i}static diag(t,r,e){let s=t.length;void 0===r&&(r=s),void 0===e&&(e=r);let i=Math.min(s,r,e),o=this.zeros(r,e);for(let r=0;r<i;r++)o.set(r,r,t[r]);return o}static min(t,r){t=this.checkMatrix(t),r=this.checkMatrix(r);let e=t.rows,s=t.columns,i=new Matrix(e,s);for(let o=0;o<e;o++)for(let e=0;e<s;e++)i.set(o,e,Math.min(t.get(o,e),r.get(o,e)));return i}static max(t,r){t=this.checkMatrix(t),r=this.checkMatrix(r);let e=t.rows,s=t.columns,i=new this(e,s);for(let o=0;o<e;o++)for(let e=0;e<s;e++)i.set(o,e,Math.max(t.get(o,e),r.get(o,e)));return i}static checkMatrix(t){return AbstractMatrix.isMatrix(t)?t:new Matrix(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw TypeError("callback must be a function");for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)t.call(this,r,e);return this}to1DArray(){let t=[];for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)t.push(this.get(r,e));return t}to2DArray(){let t=[];for(let r=0;r<this.rows;r++){t.push([]);for(let e=0;e<this.columns;e++)t[r].push(this.get(r,e))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let r=0;r<=t;r++)if(this.get(t,r)!==this.get(r,t))return!1;return!0}return!1}isDistance(){if(!this.isSymmetric())return!1;for(let t=0;t<this.rows;t++)if(0!==this.get(t,t))return!1;return!0}isEchelonForm(){let t=0,r=0,e=-1,s=!0,i=!1;for(;t<this.rows&&s;){for(r=0,i=!1;r<this.columns&&!1===i;)0===this.get(t,r)?r++:1===this.get(t,r)&&r>e?(i=!0,e=r):(s=!1,i=!0);t++}return s}isReducedEchelonForm(){let t=0,r=0,e=-1,s=!0,i=!1;for(;t<this.rows&&s;){for(r=0,i=!1;r<this.columns&&!1===i;)0===this.get(t,r)?r++:1===this.get(t,r)&&r>e?(i=!0,e=r):(s=!1,i=!0);for(let e=r+1;e<this.rows;e++)0!==this.get(t,e)&&(s=!1);t++}return s}echelonForm(){let t=this.clone(),r=0,e=0;for(;r<t.rows&&e<t.columns;){let s=r;for(let i=r;i<t.rows;i++)t.get(i,e)>t.get(s,e)&&(s=i);if(0===t.get(s,e))e++;else{t.swapRows(r,s);let i=t.get(r,e);for(let s=e;s<t.columns;s++)t.set(r,s,t.get(r,s)/i);for(let s=r+1;s<t.rows;s++){let i=t.get(s,e)/t.get(r,e);t.set(s,e,0);for(let o=e+1;o<t.columns;o++)t.set(s,o,t.get(s,o)-t.get(r,o)*i)}r++,e++}}return t}reducedEchelonForm(){let t=this.echelonForm(),r=t.columns,e=t.rows,s=e-1;for(;s>=0;)if(0===t.maxRow(s))s--;else{let i=0,o=!1;for(;i<e&&!1===o;)1===t.get(s,i)?o=!0:i++;for(let e=0;e<s;e++){let o=t.get(e,i);for(let n=i;n<r;n++){let r=t.get(e,n)-o*t.get(s,n);t.set(e,n,r)}}s--}return t}set(){throw Error("set method is unimplemented")}get(){throw Error("get method is unimplemented")}repeat(t={}){if("object"!=typeof t)throw TypeError("options must be an object");let{rows:r=1,columns:e=1}=t;if(!Number.isInteger(r)||r<=0)throw TypeError("rows must be a positive integer");if(!Number.isInteger(e)||e<=0)throw TypeError("columns must be a positive integer");let s=new Matrix(this.rows*r,this.columns*e);for(let t=0;t<r;t++)for(let r=0;r<e;r++)s.setSubMatrix(this,this.rows*t,this.columns*r);return s}fill(t){for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,t);return this}neg(){return this.mulS(-1)}getRow(t){checkRowIndex(this,t);let r=[];for(let e=0;e<this.columns;e++)r.push(this.get(t,e));return r}getRowVector(t){return Matrix.rowVector(this.getRow(t))}setRow(t,r){checkRowIndex(this,t),r=checkRowVector(this,r);for(let e=0;e<this.columns;e++)this.set(t,e,r[e]);return this}swapRows(t,r){checkRowIndex(this,t),checkRowIndex(this,r);for(let e=0;e<this.columns;e++){let s=this.get(t,e);this.set(t,e,this.get(r,e)),this.set(r,e,s)}return this}getColumn(t){checkColumnIndex(this,t);let r=[];for(let e=0;e<this.rows;e++)r.push(this.get(e,t));return r}getColumnVector(t){return Matrix.columnVector(this.getColumn(t))}setColumn(t,r){checkColumnIndex(this,t),r=checkColumnVector(this,r);for(let e=0;e<this.rows;e++)this.set(e,t,r[e]);return this}swapColumns(t,r){checkColumnIndex(this,t),checkColumnIndex(this,r);for(let e=0;e<this.rows;e++){let s=this.get(e,t);this.set(e,t,this.get(e,r)),this.set(e,r,s)}return this}addRowVector(t){t=checkRowVector(this,t);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)+t[e]);return this}subRowVector(t){t=checkRowVector(this,t);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)-t[e]);return this}mulRowVector(t){t=checkRowVector(this,t);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)*t[e]);return this}divRowVector(t){t=checkRowVector(this,t);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)/t[e]);return this}addColumnVector(t){t=checkColumnVector(this,t);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)+t[r]);return this}subColumnVector(t){t=checkColumnVector(this,t);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)-t[r]);return this}mulColumnVector(t){t=checkColumnVector(this,t);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)*t[r]);return this}divColumnVector(t){t=checkColumnVector(this,t);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)/t[r]);return this}mulRow(t,r){checkRowIndex(this,t);for(let e=0;e<this.columns;e++)this.set(t,e,this.get(t,e)*r);return this}mulColumn(t,r){checkColumnIndex(this,t);for(let e=0;e<this.rows;e++)this.set(e,t,this.get(e,t)*r);return this}max(t){if(this.isEmpty())return NaN;switch(t){case"row":{let t=Array(this.rows).fill(Number.NEGATIVE_INFINITY);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.get(r,e)>t[r]&&(t[r]=this.get(r,e));return t}case"column":{let t=Array(this.columns).fill(Number.NEGATIVE_INFINITY);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.get(r,e)>t[e]&&(t[e]=this.get(r,e));return t}case void 0:{let t=this.get(0,0);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.get(r,e)>t&&(t=this.get(r,e));return t}default:throw Error(`invalid option: ${t}`)}}maxIndex(){checkNonEmpty(this);let t=this.get(0,0),r=[0,0];for(let e=0;e<this.rows;e++)for(let s=0;s<this.columns;s++)this.get(e,s)>t&&(t=this.get(e,s),r[0]=e,r[1]=s);return r}min(t){if(this.isEmpty())return NaN;switch(t){case"row":{let t=Array(this.rows).fill(Number.POSITIVE_INFINITY);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.get(r,e)<t[r]&&(t[r]=this.get(r,e));return t}case"column":{let t=Array(this.columns).fill(Number.POSITIVE_INFINITY);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.get(r,e)<t[e]&&(t[e]=this.get(r,e));return t}case void 0:{let t=this.get(0,0);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.get(r,e)<t&&(t=this.get(r,e));return t}default:throw Error(`invalid option: ${t}`)}}minIndex(){checkNonEmpty(this);let t=this.get(0,0),r=[0,0];for(let e=0;e<this.rows;e++)for(let s=0;s<this.columns;s++)this.get(e,s)<t&&(t=this.get(e,s),r[0]=e,r[1]=s);return r}maxRow(t){if(checkRowIndex(this,t),this.isEmpty())return NaN;let r=this.get(t,0);for(let e=1;e<this.columns;e++)this.get(t,e)>r&&(r=this.get(t,e));return r}maxRowIndex(t){checkRowIndex(this,t),checkNonEmpty(this);let r=this.get(t,0),e=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)>r&&(r=this.get(t,s),e[1]=s);return e}minRow(t){if(checkRowIndex(this,t),this.isEmpty())return NaN;let r=this.get(t,0);for(let e=1;e<this.columns;e++)this.get(t,e)<r&&(r=this.get(t,e));return r}minRowIndex(t){checkRowIndex(this,t),checkNonEmpty(this);let r=this.get(t,0),e=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)<r&&(r=this.get(t,s),e[1]=s);return e}maxColumn(t){if(checkColumnIndex(this,t),this.isEmpty())return NaN;let r=this.get(0,t);for(let e=1;e<this.rows;e++)this.get(e,t)>r&&(r=this.get(e,t));return r}maxColumnIndex(t){checkColumnIndex(this,t),checkNonEmpty(this);let r=this.get(0,t),e=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)>r&&(r=this.get(s,t),e[0]=s);return e}minColumn(t){if(checkColumnIndex(this,t),this.isEmpty())return NaN;let r=this.get(0,t);for(let e=1;e<this.rows;e++)this.get(e,t)<r&&(r=this.get(e,t));return r}minColumnIndex(t){checkColumnIndex(this,t),checkNonEmpty(this);let r=this.get(0,t),e=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)<r&&(r=this.get(s,t),e[0]=s);return e}diag(){let t=Math.min(this.rows,this.columns),r=[];for(let e=0;e<t;e++)r.push(this.get(e,e));return r}norm(t="frobenius"){switch(t){case"max":return this.max();case"frobenius":return Math.sqrt(this.dot(this));default:throw RangeError(`unknown norm type: ${t}`)}}cumulativeSum(){let t=0;for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)t+=this.get(r,e),this.set(r,e,t);return this}dot(t){AbstractMatrix.isMatrix(t)&&(t=t.to1DArray());let r=this.to1DArray();if(r.length!==t.length)throw RangeError("vectors do not have the same size");let e=0;for(let s=0;s<r.length;s++)e+=r[s]*t[s];return e}mmul(t){t=Matrix.checkMatrix(t);let r=this.rows,e=this.columns,s=t.columns,i=new Matrix(r,s),o=new Float64Array(e);for(let n=0;n<s;n++){for(let r=0;r<e;r++)o[r]=t.get(r,n);for(let t=0;t<r;t++){let r=0;for(let s=0;s<e;s++)r+=this.get(t,s)*o[s];i.set(t,n,r)}}return i}strassen2x2(t){t=Matrix.checkMatrix(t);let r=new Matrix(2,2),e=this.get(0,0),s=t.get(0,0),i=this.get(0,1),o=t.get(0,1),n=this.get(1,0),a=t.get(1,0),h=this.get(1,1),l=t.get(1,1),u=(e+h)*(s+l),c=(n+h)*s,f=e*(o-l),m=h*(a-s),g=(e+i)*l;return r.set(0,0,u+m-g+(i-h)*(a+l)),r.set(0,1,f+g),r.set(1,0,c+m),r.set(1,1,u-c+f+(n-e)*(s+o)),r}strassen3x3(t){t=Matrix.checkMatrix(t);let r=new Matrix(3,3),e=this.get(0,0),s=this.get(0,1),i=this.get(0,2),o=this.get(1,0),n=this.get(1,1),a=this.get(1,2),h=this.get(2,0),l=this.get(2,1),u=this.get(2,2),c=t.get(0,0),f=t.get(0,1),m=t.get(0,2),g=t.get(1,0),M=t.get(1,1),w=t.get(1,2),x=t.get(2,0),p=t.get(2,1),b=t.get(2,2),d=(e-o)*(-f+M),y=(-e+o+n)*(c-f+M),A=(o+n)*(-c+f),E=e*c,S=(-e+h+l)*(c-m+w),v=(-e+h)*(m-w),k=(h+l)*(-c+m),R=(-i+l+u)*(M+x-p),I=(i-u)*(M-p),N=i*x,V=(l+u)*(-x+p),C=(-i+n+a)*(w+x-b),D=(i-a)*(w-b),T=(n+a)*(-x+b);return r.set(0,0,E+N+s*g),r.set(0,1,(e+s+i-o-n-l-u)*M+y+A+E+R+N+V),r.set(0,2,E+S+k+(e+s+i-n-a-h-l)*w+N+C+T),r.set(1,0,d+n*(-c+f+g-M-w-x+b)+y+E+N+C+D),r.set(1,1,d+y+A+E+a*p),r.set(1,2,N+C+D+T+o*m),r.set(2,0,E+S+v+l*(-c+m+g-M-w-x+p)+R+I+N),r.set(2,1,R+I+N+V+h*f),r.set(2,2,E+S+v+k+u*b),r}mmulStrassen(t){t=Matrix.checkMatrix(t);let r=this.clone(),e=r.rows,s=r.columns,i=t.rows,o=t.columns;function embed(t,r,e){let s=t.rows,i=t.columns;return s===r&&i===e?t:AbstractMatrix.zeros(r,e).setSubMatrix(t,0,0)}s!==i&&console.warn(`Multiplying ${e} x ${s} and ${i} x ${o} matrix: dimensions do not match.`);let n=Math.max(e,i),a=Math.max(s,o);return function blockMult(t,r,e,s){if(e<=512||s<=512)return t.mmul(r);e%2==1&&s%2==1?(t=embed(t,e+1,s+1),r=embed(r,e+1,s+1)):e%2==1?(t=embed(t,e+1,s),r=embed(r,e+1,s)):s%2==1&&(t=embed(t,e,s+1),r=embed(r,e,s+1));let i=parseInt(t.rows/2,10),o=parseInt(t.columns/2,10),n=t.subMatrix(0,i-1,0,o-1),a=r.subMatrix(0,i-1,0,o-1),h=t.subMatrix(0,i-1,o,t.columns-1),l=r.subMatrix(0,i-1,o,r.columns-1),u=t.subMatrix(i,t.rows-1,0,o-1),c=r.subMatrix(i,r.rows-1,0,o-1),f=t.subMatrix(i,t.rows-1,o,t.columns-1),m=r.subMatrix(i,r.rows-1,o,r.columns-1),g=blockMult(AbstractMatrix.add(n,f),AbstractMatrix.add(a,m),i,o),M=blockMult(AbstractMatrix.add(u,f),a,i,o),w=blockMult(n,AbstractMatrix.sub(l,m),i,o),x=blockMult(f,AbstractMatrix.sub(c,a),i,o),p=blockMult(AbstractMatrix.add(n,h),m,i,o),b=blockMult(AbstractMatrix.sub(u,n),AbstractMatrix.add(a,l),i,o),d=blockMult(AbstractMatrix.sub(h,f),AbstractMatrix.add(c,m),i,o),y=AbstractMatrix.add(g,x);y.sub(p),y.add(d);let A=AbstractMatrix.add(w,p),E=AbstractMatrix.add(M,x),S=AbstractMatrix.sub(g,M);S.add(w),S.add(b);let v=AbstractMatrix.zeros(2*y.rows,2*y.columns);return(v=(v=(v=(v=v.setSubMatrix(y,0,0)).setSubMatrix(A,y.rows,0)).setSubMatrix(E,0,y.columns)).setSubMatrix(S,y.rows,y.columns)).subMatrix(0,e-1,0,s-1)}(r=embed(r,n,a),t=embed(t,n,a),n,a)}scaleRows(t={}){if("object"!=typeof t)throw TypeError("options must be an object");let{min:r=0,max:e=1}=t;if(!Number.isFinite(r))throw TypeError("min must be a number");if(!Number.isFinite(e))throw TypeError("max must be a number");if(r>=e)throw RangeError("min must be smaller than max");let s=new Matrix(this.rows,this.columns);for(let t=0;t<this.rows;t++){let o=this.getRow(t);o.length>0&&i(o,{min:r,max:e,output:o}),s.setRow(t,o)}return s}scaleColumns(t={}){if("object"!=typeof t)throw TypeError("options must be an object");let{min:r=0,max:e=1}=t;if(!Number.isFinite(r))throw TypeError("min must be a number");if(!Number.isFinite(e))throw TypeError("max must be a number");if(r>=e)throw RangeError("min must be smaller than max");let s=new Matrix(this.rows,this.columns);for(let t=0;t<this.columns;t++){let o=this.getColumn(t);o.length&&i(o,{min:r,max:e,output:o}),s.setColumn(t,o)}return s}flipRows(){let t=Math.ceil(this.columns/2);for(let r=0;r<this.rows;r++)for(let e=0;e<t;e++){let t=this.get(r,e),s=this.get(r,this.columns-1-e);this.set(r,e,s),this.set(r,this.columns-1-e,t)}return this}flipColumns(){let t=Math.ceil(this.rows/2);for(let r=0;r<this.columns;r++)for(let e=0;e<t;e++){let t=this.get(e,r),s=this.get(this.rows-1-e,r);this.set(e,r,s),this.set(this.rows-1-e,r,t)}return this}kroneckerProduct(t){t=Matrix.checkMatrix(t);let r=this.rows,e=this.columns,s=t.rows,i=t.columns,o=new Matrix(r*s,e*i);for(let n=0;n<r;n++)for(let r=0;r<e;r++)for(let e=0;e<s;e++)for(let a=0;a<i;a++)o.set(s*n+e,i*r+a,this.get(n,r)*t.get(e,a));return o}kroneckerSum(t){if(t=Matrix.checkMatrix(t),!this.isSquare()||!t.isSquare())throw Error("Kronecker Sum needs two Square Matrices");let r=this.rows,e=t.rows,s=this.kroneckerProduct(Matrix.eye(e,e)),i=Matrix.eye(r,r).kroneckerProduct(t);return s.add(i)}transpose(){let t=new Matrix(this.columns,this.rows);for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)t.set(e,r,this.get(r,e));return t}sortRows(t=compareNumbers){for(let r=0;r<this.rows;r++)this.setRow(r,this.getRow(r).sort(t));return this}sortColumns(t=compareNumbers){for(let r=0;r<this.columns;r++)this.setColumn(r,this.getColumn(r).sort(t));return this}subMatrix(t,r,e,s){checkRange(this,t,r,e,s);let i=new Matrix(r-t+1,s-e+1);for(let o=t;o<=r;o++)for(let r=e;r<=s;r++)i.set(o-t,r-e,this.get(o,r));return i}subMatrixRow(t,r,e){if(void 0===r&&(r=0),void 0===e&&(e=this.columns-1),r>e||r<0||r>=this.columns||e<0||e>=this.columns)throw RangeError("Argument out of range");let s=new Matrix(t.length,e-r+1);for(let i=0;i<t.length;i++)for(let o=r;o<=e;o++){if(t[i]<0||t[i]>=this.rows)throw RangeError(`Row index out of range: ${t[i]}`);s.set(i,o-r,this.get(t[i],o))}return s}subMatrixColumn(t,r,e){if(void 0===r&&(r=0),void 0===e&&(e=this.rows-1),r>e||r<0||r>=this.rows||e<0||e>=this.rows)throw RangeError("Argument out of range");let s=new Matrix(e-r+1,t.length);for(let i=0;i<t.length;i++)for(let o=r;o<=e;o++){if(t[i]<0||t[i]>=this.columns)throw RangeError(`Column index out of range: ${t[i]}`);s.set(o-r,i,this.get(o,t[i]))}return s}setSubMatrix(t,r,e){if((t=Matrix.checkMatrix(t)).isEmpty())return this;let s=r+t.rows-1,i=e+t.columns-1;checkRange(this,r,s,e,i);for(let s=0;s<t.rows;s++)for(let i=0;i<t.columns;i++)this.set(r+s,e+i,t.get(s,i));return this}selection(t,r){checkRowIndices(this,t),checkColumnIndices(this,r);let e=new Matrix(t.length,r.length);for(let s=0;s<t.length;s++){let i=t[s];for(let t=0;t<r.length;t++){let o=r[t];e.set(s,t,this.get(i,o))}}return e}trace(){let t=Math.min(this.rows,this.columns),r=0;for(let e=0;e<t;e++)r+=this.get(e,e);return r}clone(){return this.constructor.copy(this,new Matrix(this.rows,this.columns))}static copy(t,r){for(let[e,s,i]of t.entries())r.set(e,s,i);return r}sum(t){switch(t){case"row":return function(t){let r=newArray(t.rows);for(let e=0;e<t.rows;++e)for(let s=0;s<t.columns;++s)r[e]+=t.get(e,s);return r}(this);case"column":return function(t){let r=newArray(t.columns);for(let e=0;e<t.rows;++e)for(let s=0;s<t.columns;++s)r[s]+=t.get(e,s);return r}(this);case void 0:return function(t){let r=0;for(let e=0;e<t.rows;e++)for(let s=0;s<t.columns;s++)r+=t.get(e,s);return r}(this);default:throw Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return function(t){let r=newArray(t.rows,1);for(let e=0;e<t.rows;++e)for(let s=0;s<t.columns;++s)r[e]*=t.get(e,s);return r}(this);case"column":return function(t){let r=newArray(t.columns,1);for(let e=0;e<t.rows;++e)for(let s=0;s<t.columns;++s)r[s]*=t.get(e,s);return r}(this);case void 0:return function(t){let r=1;for(let e=0;e<t.rows;e++)for(let s=0;s<t.columns;s++)r*=t.get(e,s);return r}(this);default:throw Error(`invalid option: ${t}`)}}mean(t){let r=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)r[t]/=this.columns;return r;case"column":for(let t=0;t<this.columns;t++)r[t]/=this.rows;return r;case void 0:return r/this.size;default:throw Error(`invalid option: ${t}`)}}variance(t,r={}){if("object"==typeof t&&(r=t,t=void 0),"object"!=typeof r)throw TypeError("options must be an object");let{unbiased:e=!0,mean:i=this.mean(t)}=r;if("boolean"!=typeof e)throw TypeError("unbiased must be a boolean");switch(t){case"row":if(!s.isAnyArray(i))throw TypeError("mean must be an array");return function(t,r,e){let s=t.rows,i=t.columns,o=[];for(let n=0;n<s;n++){let s=0,a=0,h=0;for(let r=0;r<i;r++)s+=h=t.get(n,r)-e[n],a+=h*h;r?o.push((a-s*s/i)/(i-1)):o.push((a-s*s/i)/i)}return o}(this,e,i);case"column":if(!s.isAnyArray(i))throw TypeError("mean must be an array");return function(t,r,e){let s=t.rows,i=t.columns,o=[];for(let n=0;n<i;n++){let i=0,a=0,h=0;for(let r=0;r<s;r++)i+=h=t.get(r,n)-e[n],a+=h*h;r?o.push((a-i*i/s)/(s-1)):o.push((a-i*i/s)/s)}return o}(this,e,i);case void 0:if("number"!=typeof i)throw TypeError("mean must be a number");return function(t,r,e){let s=t.rows,i=t.columns,o=s*i,n=0,a=0,h=0;for(let r=0;r<s;r++)for(let s=0;s<i;s++)n+=h=t.get(r,s)-e,a+=h*h;return r?(a-n*n/o)/(o-1):(a-n*n/o)/o}(this,e,i);default:throw Error(`invalid option: ${t}`)}}standardDeviation(t,r){"object"==typeof t&&(r=t,t=void 0);let e=this.variance(t,r);if(void 0===t)return Math.sqrt(e);for(let t=0;t<e.length;t++)e[t]=Math.sqrt(e[t]);return e}center(t,r={}){if("object"==typeof t&&(r=t,t=void 0),"object"!=typeof r)throw TypeError("options must be an object");let{center:e=this.mean(t)}=r;switch(t){case"row":if(!s.isAnyArray(e))throw TypeError("center must be an array");return!function(t,r){for(let e=0;e<t.rows;e++)for(let s=0;s<t.columns;s++)t.set(e,s,t.get(e,s)-r[e])}(this,e),this;case"column":if(!s.isAnyArray(e))throw TypeError("center must be an array");return!function(t,r){for(let e=0;e<t.rows;e++)for(let s=0;s<t.columns;s++)t.set(e,s,t.get(e,s)-r[s])}(this,e),this;case void 0:if("number"!=typeof e)throw TypeError("center must be a number");return!function(t,r){for(let e=0;e<t.rows;e++)for(let s=0;s<t.columns;s++)t.set(e,s,t.get(e,s)-r)}(this,e),this;default:throw Error(`invalid option: ${t}`)}}scale(t,r={}){if("object"==typeof t&&(r=t,t=void 0),"object"!=typeof r)throw TypeError("options must be an object");let e=r.scale;switch(t){case"row":if(void 0===e)e=function(t){let r=[];for(let e=0;e<t.rows;e++){let s=0;for(let r=0;r<t.columns;r++)s+=Math.pow(t.get(e,r),2)/(t.columns-1);r.push(Math.sqrt(s))}return r}(this);else if(!s.isAnyArray(e))throw TypeError("scale must be an array");return!function(t,r){for(let e=0;e<t.rows;e++)for(let s=0;s<t.columns;s++)t.set(e,s,t.get(e,s)/r[e])}(this,e),this;case"column":if(void 0===e)e=function(t){let r=[];for(let e=0;e<t.columns;e++){let s=0;for(let r=0;r<t.rows;r++)s+=Math.pow(t.get(r,e),2)/(t.rows-1);r.push(Math.sqrt(s))}return r}(this);else if(!s.isAnyArray(e))throw TypeError("scale must be an array");return!function(t,r){for(let e=0;e<t.rows;e++)for(let s=0;s<t.columns;s++)t.set(e,s,t.get(e,s)/r[s])}(this,e),this;case void 0:if(void 0===e)e=function(t){let r=t.size-1,e=0;for(let s=0;s<t.columns;s++)for(let i=0;i<t.rows;i++)e+=Math.pow(t.get(i,s),2)/r;return Math.sqrt(e)}(this);else if("number"!=typeof e)throw TypeError("scale must be a number");return!function(t,r){for(let e=0;e<t.rows;e++)for(let s=0;s<t.columns;s++)t.set(e,s,t.get(e,s)/r)}(this,e),this;default:throw Error(`invalid option: ${t}`)}}toString(t){return inspectMatrixWithOptions(this,t)}[Symbol.iterator](){return this.entries()}*entries(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)yield[t,r,this.get(t,r)]}*values(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)yield this.get(t,r)}};function compareNumbers(t,r){return t-r}AbstractMatrix.prototype.klass="Matrix","undefined"!=typeof Symbol&&(AbstractMatrix.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return inspectMatrixWithOptions(this)}),AbstractMatrix.random=AbstractMatrix.rand,AbstractMatrix.randomInt=AbstractMatrix.randInt,AbstractMatrix.diagonal=AbstractMatrix.diag,AbstractMatrix.prototype.diagonal=AbstractMatrix.prototype.diag,AbstractMatrix.identity=AbstractMatrix.eye,AbstractMatrix.prototype.negate=AbstractMatrix.prototype.neg,AbstractMatrix.prototype.tensorProduct=AbstractMatrix.prototype.kroneckerProduct;let Matrix=class Matrix extends AbstractMatrix{data;#t(t,r){if(this.data=[],Number.isInteger(r)&&r>=0)for(let e=0;e<t;e++)this.data.push(new Float64Array(r));else throw TypeError("nColumns must be a positive integer");this.rows=t,this.columns=r}constructor(t,r){if(super(),Matrix.isMatrix(t))this.#t(t.rows,t.columns),Matrix.copy(t,this);else if(Number.isInteger(t)&&t>=0)this.#t(t,r);else if(s.isAnyArray(t)){let e=t;if("number"!=typeof(r=(t=e.length)?e[0].length:0))throw TypeError("Data must be a 2D array with at least one element");this.data=[];for(let s=0;s<t;s++){if(e[s].length!==r)throw RangeError("Inconsistent array dimensions");if(!e[s].every(t=>"number"==typeof t))throw TypeError("Input data contains non-numeric values");this.data.push(Float64Array.from(e[s]))}this.rows=t,this.columns=r}else throw TypeError("First argument must be a positive number or an array")}set(t,r,e){return this.data[t][r]=e,this}get(t,r){return this.data[t][r]}removeRow(t){return checkRowIndex(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,r){return void 0===r&&(r=t,t=this.rows),checkRowIndex(this,t,!0),r=Float64Array.from(checkRowVector(this,r)),this.data.splice(t,0,r),this.rows+=1,this}removeColumn(t){checkColumnIndex(this,t);for(let r=0;r<this.rows;r++){let e=new Float64Array(this.columns-1);for(let s=0;s<t;s++)e[s]=this.data[r][s];for(let s=t+1;s<this.columns;s++)e[s-1]=this.data[r][s];this.data[r]=e}return this.columns-=1,this}addColumn(t,r){void 0===r&&(r=t,t=this.columns),checkColumnIndex(this,t,!0),r=checkColumnVector(this,r);for(let e=0;e<this.rows;e++){let s=new Float64Array(this.columns+1),i=0;for(;i<t;i++)s[i]=this.data[e][i];for(s[i++]=r[e];i<this.columns+1;i++)s[i]=this.data[e][i-1];this.data[e]=s}return this.columns+=1,this}};AbstractMatrix.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},AbstractMatrix.prototype.addS=function(t){for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)+t);return this},AbstractMatrix.prototype.addM=function(t){if(t=Matrix.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw RangeError("Matrices dimensions must be equal");for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)+t.get(r,e));return this},AbstractMatrix.add=function(t,r){let e=new Matrix(t);return e.add(r)},AbstractMatrix.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},AbstractMatrix.prototype.subS=function(t){for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)-t);return this},AbstractMatrix.prototype.subM=function(t){if(t=Matrix.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw RangeError("Matrices dimensions must be equal");for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)-t.get(r,e));return this},AbstractMatrix.sub=function(t,r){let e=new Matrix(t);return e.sub(r)},AbstractMatrix.prototype.subtract=AbstractMatrix.prototype.sub,AbstractMatrix.prototype.subtractS=AbstractMatrix.prototype.subS,AbstractMatrix.prototype.subtractM=AbstractMatrix.prototype.subM,AbstractMatrix.subtract=AbstractMatrix.sub,AbstractMatrix.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},AbstractMatrix.prototype.mulS=function(t){for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)*t);return this},AbstractMatrix.prototype.mulM=function(t){if(t=Matrix.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw RangeError("Matrices dimensions must be equal");for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)*t.get(r,e));return this},AbstractMatrix.mul=function(t,r){let e=new Matrix(t);return e.mul(r)},AbstractMatrix.prototype.multiply=AbstractMatrix.prototype.mul,AbstractMatrix.prototype.multiplyS=AbstractMatrix.prototype.mulS,AbstractMatrix.prototype.multiplyM=AbstractMatrix.prototype.mulM,AbstractMatrix.multiply=AbstractMatrix.mul,AbstractMatrix.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},AbstractMatrix.prototype.divS=function(t){for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)/t);return this},AbstractMatrix.prototype.divM=function(t){if(t=Matrix.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw RangeError("Matrices dimensions must be equal");for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)/t.get(r,e));return this},AbstractMatrix.div=function(t,r){let e=new Matrix(t);return e.div(r)},AbstractMatrix.prototype.divide=AbstractMatrix.prototype.div,AbstractMatrix.prototype.divideS=AbstractMatrix.prototype.divS,AbstractMatrix.prototype.divideM=AbstractMatrix.prototype.divM,AbstractMatrix.divide=AbstractMatrix.div,AbstractMatrix.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},AbstractMatrix.prototype.modS=function(t){for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)%t);return this},AbstractMatrix.prototype.modM=function(t){if(t=Matrix.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw RangeError("Matrices dimensions must be equal");for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)%t.get(r,e));return this},AbstractMatrix.mod=function(t,r){let e=new Matrix(t);return e.mod(r)},AbstractMatrix.prototype.modulus=AbstractMatrix.prototype.mod,AbstractMatrix.prototype.modulusS=AbstractMatrix.prototype.modS,AbstractMatrix.prototype.modulusM=AbstractMatrix.prototype.modM,AbstractMatrix.modulus=AbstractMatrix.mod,AbstractMatrix.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},AbstractMatrix.prototype.andS=function(t){for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)&t);return this},AbstractMatrix.prototype.andM=function(t){if(t=Matrix.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw RangeError("Matrices dimensions must be equal");for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)&t.get(r,e));return this},AbstractMatrix.and=function(t,r){let e=new Matrix(t);return e.and(r)},AbstractMatrix.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},AbstractMatrix.prototype.orS=function(t){for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)|t);return this},AbstractMatrix.prototype.orM=function(t){if(t=Matrix.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw RangeError("Matrices dimensions must be equal");for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)|t.get(r,e));return this},AbstractMatrix.or=function(t,r){let e=new Matrix(t);return e.or(r)},AbstractMatrix.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},AbstractMatrix.prototype.xorS=function(t){for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)^t);return this},AbstractMatrix.prototype.xorM=function(t){if(t=Matrix.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw RangeError("Matrices dimensions must be equal");for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)^t.get(r,e));return this},AbstractMatrix.xor=function(t,r){let e=new Matrix(t);return e.xor(r)},AbstractMatrix.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},AbstractMatrix.prototype.leftShiftS=function(t){for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)<<t);return this},AbstractMatrix.prototype.leftShiftM=function(t){if(t=Matrix.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw RangeError("Matrices dimensions must be equal");for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)<<t.get(r,e));return this},AbstractMatrix.leftShift=function(t,r){let e=new Matrix(t);return e.leftShift(r)},AbstractMatrix.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},AbstractMatrix.prototype.signPropagatingRightShiftS=function(t){for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)>>t);return this},AbstractMatrix.prototype.signPropagatingRightShiftM=function(t){if(t=Matrix.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw RangeError("Matrices dimensions must be equal");for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)>>t.get(r,e));return this},AbstractMatrix.signPropagatingRightShift=function(t,r){let e=new Matrix(t);return e.signPropagatingRightShift(r)},AbstractMatrix.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},AbstractMatrix.prototype.rightShiftS=function(t){for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)>>>t);return this},AbstractMatrix.prototype.rightShiftM=function(t){if(t=Matrix.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw RangeError("Matrices dimensions must be equal");for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,this.get(r,e)>>>t.get(r,e));return this},AbstractMatrix.rightShift=function(t,r){let e=new Matrix(t);return e.rightShift(r)},AbstractMatrix.prototype.zeroFillRightShift=AbstractMatrix.prototype.rightShift,AbstractMatrix.prototype.zeroFillRightShiftS=AbstractMatrix.prototype.rightShiftS,AbstractMatrix.prototype.zeroFillRightShiftM=AbstractMatrix.prototype.rightShiftM,AbstractMatrix.zeroFillRightShift=AbstractMatrix.rightShift,AbstractMatrix.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,~this.get(t,r));return this},AbstractMatrix.not=function(t){let r=new Matrix(t);return r.not()},AbstractMatrix.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.abs(this.get(t,r)));return this},AbstractMatrix.abs=function(t){let r=new Matrix(t);return r.abs()},AbstractMatrix.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.acos(this.get(t,r)));return this},AbstractMatrix.acos=function(t){let r=new Matrix(t);return r.acos()},AbstractMatrix.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.acosh(this.get(t,r)));return this},AbstractMatrix.acosh=function(t){let r=new Matrix(t);return r.acosh()},AbstractMatrix.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.asin(this.get(t,r)));return this},AbstractMatrix.asin=function(t){let r=new Matrix(t);return r.asin()},AbstractMatrix.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.asinh(this.get(t,r)));return this},AbstractMatrix.asinh=function(t){let r=new Matrix(t);return r.asinh()},AbstractMatrix.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.atan(this.get(t,r)));return this},AbstractMatrix.atan=function(t){let r=new Matrix(t);return r.atan()},AbstractMatrix.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.atanh(this.get(t,r)));return this},AbstractMatrix.atanh=function(t){let r=new Matrix(t);return r.atanh()},AbstractMatrix.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.cbrt(this.get(t,r)));return this},AbstractMatrix.cbrt=function(t){let r=new Matrix(t);return r.cbrt()},AbstractMatrix.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.ceil(this.get(t,r)));return this},AbstractMatrix.ceil=function(t){let r=new Matrix(t);return r.ceil()},AbstractMatrix.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.clz32(this.get(t,r)));return this},AbstractMatrix.clz32=function(t){let r=new Matrix(t);return r.clz32()},AbstractMatrix.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.cos(this.get(t,r)));return this},AbstractMatrix.cos=function(t){let r=new Matrix(t);return r.cos()},AbstractMatrix.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.cosh(this.get(t,r)));return this},AbstractMatrix.cosh=function(t){let r=new Matrix(t);return r.cosh()},AbstractMatrix.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.exp(this.get(t,r)));return this},AbstractMatrix.exp=function(t){let r=new Matrix(t);return r.exp()},AbstractMatrix.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.expm1(this.get(t,r)));return this},AbstractMatrix.expm1=function(t){let r=new Matrix(t);return r.expm1()},AbstractMatrix.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.floor(this.get(t,r)));return this},AbstractMatrix.floor=function(t){let r=new Matrix(t);return r.floor()},AbstractMatrix.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.fround(this.get(t,r)));return this},AbstractMatrix.fround=function(t){let r=new Matrix(t);return r.fround()},AbstractMatrix.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.log(this.get(t,r)));return this},AbstractMatrix.log=function(t){let r=new Matrix(t);return r.log()},AbstractMatrix.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.log1p(this.get(t,r)));return this},AbstractMatrix.log1p=function(t){let r=new Matrix(t);return r.log1p()},AbstractMatrix.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.log10(this.get(t,r)));return this},AbstractMatrix.log10=function(t){let r=new Matrix(t);return r.log10()},AbstractMatrix.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.log2(this.get(t,r)));return this},AbstractMatrix.log2=function(t){let r=new Matrix(t);return r.log2()},AbstractMatrix.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.round(this.get(t,r)));return this},AbstractMatrix.round=function(t){let r=new Matrix(t);return r.round()},AbstractMatrix.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.sign(this.get(t,r)));return this},AbstractMatrix.sign=function(t){let r=new Matrix(t);return r.sign()},AbstractMatrix.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.sin(this.get(t,r)));return this},AbstractMatrix.sin=function(t){let r=new Matrix(t);return r.sin()},AbstractMatrix.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.sinh(this.get(t,r)));return this},AbstractMatrix.sinh=function(t){let r=new Matrix(t);return r.sinh()},AbstractMatrix.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.sqrt(this.get(t,r)));return this},AbstractMatrix.sqrt=function(t){let r=new Matrix(t);return r.sqrt()},AbstractMatrix.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.tan(this.get(t,r)));return this},AbstractMatrix.tan=function(t){let r=new Matrix(t);return r.tan()},AbstractMatrix.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.tanh(this.get(t,r)));return this},AbstractMatrix.tanh=function(t){let r=new Matrix(t);return r.tanh()},AbstractMatrix.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)this.set(t,r,Math.trunc(this.get(t,r)));return this},AbstractMatrix.trunc=function(t){let r=new Matrix(t);return r.trunc()},AbstractMatrix.pow=function(t,r){let e=new Matrix(t);return e.pow(r)},AbstractMatrix.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},AbstractMatrix.prototype.powS=function(t){for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,Math.pow(this.get(r,e),t));return this},AbstractMatrix.prototype.powM=function(t){if(t=Matrix.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw RangeError("Matrices dimensions must be equal");for(let r=0;r<this.rows;r++)for(let e=0;e<this.columns;e++)this.set(r,e,Math.pow(this.get(r,e),t.get(r,e)));return this};let SymmetricMatrix=class SymmetricMatrix extends AbstractMatrix{#r;get size(){return this.#r.size}get rows(){return this.#r.rows}get columns(){return this.#r.columns}get diagonalSize(){return this.rows}static isSymmetricMatrix(t){return Matrix.isMatrix(t)&&"SymmetricMatrix"===t.klassType}static zeros(t){return new this(t)}static ones(t){return new this(t).fill(1)}constructor(t){if(super(),Matrix.isMatrix(t)){if(!t.isSymmetric())throw TypeError("not symmetric data");this.#r=Matrix.copy(t,new Matrix(t.rows,t.rows))}else if(Number.isInteger(t)&&t>=0)this.#r=new Matrix(t,t);else if(this.#r=new Matrix(t),!this.isSymmetric())throw TypeError("not symmetric data")}clone(){let t=new SymmetricMatrix(this.diagonalSize);for(let[r,e,s]of this.upperRightEntries())t.set(r,e,s);return t}toMatrix(){return new Matrix(this)}get(t,r){return this.#r.get(t,r)}set(t,r,e){return this.#r.set(t,r,e),this.#r.set(r,t,e),this}removeCross(t){return this.#r.removeRow(t),this.#r.removeColumn(t),this}addCross(t,r){void 0===r&&(r=t,t=this.diagonalSize);let e=r.slice();return e.splice(t,1),this.#r.addRow(t,e),this.#r.addColumn(t,r),this}applyMask(t){if(t.length!==this.diagonalSize)throw RangeError("Mask size do not match with matrix size");let r=[];for(let[e,s]of t.entries())s||r.push(e);for(let t of(r.reverse(),r))this.removeCross(t);return this}toCompact(){let{diagonalSize:t}=this,r=Array(t*(t+1)/2);for(let e=0,s=0,i=0;i<r.length;i++)r[i]=this.get(s,e),++e>=t&&(e=++s);return r}static fromCompact(t){let r=t.length,e=(Math.sqrt(8*r+1)-1)/2;if(!Number.isInteger(e))throw TypeError(`This array is not a compact representation of a Symmetric Matrix, ${JSON.stringify(t)}`);let s=new SymmetricMatrix(e);for(let i=0,o=0,n=0;n<r;n++)s.set(i,o,t[n]),++i>=e&&(i=++o);return s}*upperRightEntries(){for(let t=0,r=0;t<this.diagonalSize;){let e=this.get(t,r);yield[t,r,e],++r>=this.diagonalSize&&(r=++t)}}*upperRightValues(){for(let t=0,r=0;t<this.diagonalSize;){let e=this.get(t,r);yield e,++r>=this.diagonalSize&&(r=++t)}}};SymmetricMatrix.prototype.klassType="SymmetricMatrix";let DistanceMatrix=class DistanceMatrix extends SymmetricMatrix{static isDistanceMatrix(t){return SymmetricMatrix.isSymmetricMatrix(t)&&"DistanceMatrix"===t.klassSubType}constructor(t){if(super(t),!this.isDistance())throw TypeError("Provided arguments do no produce a distance matrix")}set(t,r,e){return t===r&&(e=0),super.set(t,r,e)}addCross(t,r){return void 0===r&&(r=t,t=this.diagonalSize),(r=r.slice())[t]=0,super.addCross(t,r)}toSymmetricMatrix(){return new SymmetricMatrix(this)}clone(){let t=new DistanceMatrix(this.diagonalSize);for(let[r,e,s]of this.upperRightEntries())r!==e&&t.set(r,e,s);return t}toCompact(){let{diagonalSize:t}=this,r=Array((t-1)*t/2);for(let e=1,s=0,i=0;i<r.length;i++)r[i]=this.get(s,e),++e>=t&&(e=++s+1);return r}static fromCompact(t){let r=t.length,e=(Math.sqrt(8*r+1)+1)/2;if(!Number.isInteger(e))throw TypeError(`This array is not a compact representation of a DistanceMatrix, ${JSON.stringify(t)}`);let s=new this(e);for(let i=1,o=0,n=0;n<r;n++)s.set(i,o,t[n]),++i>=e&&(i=++o+1);return s}};DistanceMatrix.prototype.klassSubType="DistanceMatrix";let BaseView=class BaseView extends AbstractMatrix{constructor(t,r,e){super(),this.matrix=t,this.rows=r,this.columns=e}};let MatrixSelectionView=class MatrixSelectionView extends BaseView{constructor(t,r,e){checkRowIndices(t,r),checkColumnIndices(t,e),super(t,r.length,e.length),this.rowIndices=r,this.columnIndices=e}set(t,r,e){return this.matrix.set(this.rowIndices[t],this.columnIndices[r],e),this}get(t,r){return this.matrix.get(this.rowIndices[t],this.columnIndices[r])}};let WrapperMatrix1D=class WrapperMatrix1D extends AbstractMatrix{constructor(t,r={}){let{rows:e=1}=r;if(t.length%e!=0)throw Error("the data length is not divisible by the number of rows");super(),this.rows=e,this.columns=t.length/e,this.data=t}set(t,r,e){let s=this._calculateIndex(t,r);return this.data[s]=e,this}get(t,r){let e=this._calculateIndex(t,r);return this.data[e]}_calculateIndex(t,r){return t*this.columns+r}};let WrapperMatrix2D=class WrapperMatrix2D extends AbstractMatrix{constructor(t){super(),this.data=t,this.rows=t.length,this.columns=t[0].length}set(t,r,e){return this.data[t][r]=e,this}get(t,r){return this.data[t][r]}};let LuDecomposition=class LuDecomposition{constructor(t){let r,e,s,i,o,n,a,h,l;let u=(t=WrapperMatrix2D.checkMatrix(t)).clone(),c=u.rows,f=u.columns,m=new Float64Array(c),g=1;for(r=0;r<c;r++)m[r]=r;for(e=0,h=new Float64Array(c);e<f;e++){for(r=0;r<c;r++)h[r]=u.get(r,e);for(r=0;r<c;r++){for(s=0,l=Math.min(r,e),o=0;s<l;s++)o+=u.get(r,s)*h[s];h[r]-=o,u.set(r,e,h[r])}for(i=e,r=e+1;r<c;r++)Math.abs(h[r])>Math.abs(h[i])&&(i=r);if(i!==e){for(s=0;s<f;s++)n=u.get(i,s),u.set(i,s,u.get(e,s)),u.set(e,s,n);a=m[i],m[i]=m[e],m[e]=a,g=-g}if(e<c&&0!==u.get(e,e))for(r=e+1;r<c;r++)u.set(r,e,u.get(r,e)/u.get(e,e))}this.LU=u,this.pivotVector=m,this.pivotSign=g}isSingular(){let t=this.LU,r=t.columns;for(let e=0;e<r;e++)if(0===t.get(e,e))return!0;return!1}solve(t){let r,e,s;t=Matrix.checkMatrix(t);let i=this.LU;if(i.rows!==t.rows)throw Error("Invalid matrix dimensions");if(this.isSingular())throw Error("LU matrix is singular");let o=t.columns,n=t.subMatrixRow(this.pivotVector,0,o-1),a=i.columns;for(s=0;s<a;s++)for(r=s+1;r<a;r++)for(e=0;e<o;e++)n.set(r,e,n.get(r,e)-n.get(s,e)*i.get(r,s));for(s=a-1;s>=0;s--){for(e=0;e<o;e++)n.set(s,e,n.get(s,e)/i.get(s,s));for(r=0;r<s;r++)for(e=0;e<o;e++)n.set(r,e,n.get(r,e)-n.get(s,e)*i.get(r,s))}return n}get determinant(){let t=this.LU;if(!t.isSquare())throw Error("Matrix must be square");let r=this.pivotSign,e=t.columns;for(let s=0;s<e;s++)r*=t.get(s,s);return r}get lowerTriangularMatrix(){let t=this.LU,r=t.rows,e=t.columns,s=new Matrix(r,e);for(let i=0;i<r;i++)for(let r=0;r<e;r++)i>r?s.set(i,r,t.get(i,r)):i===r?s.set(i,r,1):s.set(i,r,0);return s}get upperTriangularMatrix(){let t=this.LU,r=t.rows,e=t.columns,s=new Matrix(r,e);for(let i=0;i<r;i++)for(let r=0;r<e;r++)i<=r?s.set(i,r,t.get(i,r)):s.set(i,r,0);return s}get pivotPermutationVector(){return Array.from(this.pivotVector)}};function hypotenuse(t,r){let e=0;return Math.abs(t)>Math.abs(r)?(e=r/t,Math.abs(t)*Math.sqrt(1+e*e)):0!==r?(e=t/r,Math.abs(r)*Math.sqrt(1+e*e)):0}let QrDecomposition=class QrDecomposition{constructor(t){let r,e,s,i;let o=(t=WrapperMatrix2D.checkMatrix(t)).clone(),n=t.rows,a=t.columns,h=new Float64Array(a);for(s=0;s<a;s++){let t=0;for(r=s;r<n;r++)t=hypotenuse(t,o.get(r,s));if(0!==t){for(0>o.get(s,s)&&(t=-t),r=s;r<n;r++)o.set(r,s,o.get(r,s)/t);for(o.set(s,s,o.get(s,s)+1),e=s+1;e<a;e++){for(i=0,r=s;r<n;r++)i+=o.get(r,s)*o.get(r,e);for(i=-i/o.get(s,s),r=s;r<n;r++)o.set(r,e,o.get(r,e)+i*o.get(r,s))}}h[s]=-t}this.QR=o,this.Rdiag=h}solve(t){let r,e,s,i;t=Matrix.checkMatrix(t);let o=this.QR,n=o.rows;if(t.rows!==n)throw Error("Matrix row dimensions must agree");if(!this.isFullRank())throw Error("Matrix is rank deficient");let a=t.columns,h=t.clone(),l=o.columns;for(s=0;s<l;s++)for(e=0;e<a;e++){for(i=0,r=s;r<n;r++)i+=o.get(r,s)*h.get(r,e);for(i=-i/o.get(s,s),r=s;r<n;r++)h.set(r,e,h.get(r,e)+i*o.get(r,s))}for(s=l-1;s>=0;s--){for(e=0;e<a;e++)h.set(s,e,h.get(s,e)/this.Rdiag[s]);for(r=0;r<s;r++)for(e=0;e<a;e++)h.set(r,e,h.get(r,e)-h.get(s,e)*o.get(r,s))}return h.subMatrix(0,l-1,0,a-1)}isFullRank(){let t=this.QR.columns;for(let r=0;r<t;r++)if(0===this.Rdiag[r])return!1;return!0}get upperTriangularMatrix(){let t,r,e=this.QR,s=e.columns,i=new Matrix(s,s);for(t=0;t<s;t++)for(r=0;r<s;r++)t<r?i.set(t,r,e.get(t,r)):t===r?i.set(t,r,this.Rdiag[t]):i.set(t,r,0);return i}get orthogonalMatrix(){let t,r,e,s,i=this.QR,o=i.rows,n=i.columns,a=new Matrix(o,n);for(e=n-1;e>=0;e--){for(t=0;t<o;t++)a.set(t,e,0);for(a.set(e,e,1),r=e;r<n;r++)if(0!==i.get(e,e)){for(s=0,t=e;t<o;t++)s+=i.get(t,e)*a.get(t,r);for(s=-s/i.get(e,e),t=e;t<o;t++)a.set(t,r,a.get(t,r)+s*i.get(t,e))}}return a}};let SingularValueDecomposition=class SingularValueDecomposition{constructor(t,r={}){let e;if((t=WrapperMatrix2D.checkMatrix(t)).isEmpty())throw Error("Matrix must be non-empty");let s=t.rows,i=t.columns,{computeLeftSingularVectors:o=!0,computeRightSingularVectors:n=!0,autoTranspose:a=!1}=r,h=!!o,l=!!n,u=!1;if(s<i){if(a){s=(e=t.transpose()).rows,i=e.columns,u=!0;let r=h;h=l,l=r}else e=t.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose")}else e=t.clone();let c=Math.min(s,i),f=Math.min(s+1,i),m=new Float64Array(f),g=new Matrix(s,c),M=new Matrix(i,i),w=new Float64Array(i),x=new Float64Array(s),p=new Float64Array(f);for(let t=0;t<f;t++)p[t]=t;let b=Math.min(s-1,i),d=Math.max(0,Math.min(i-2,s)),y=Math.max(b,d);for(let t=0;t<y;t++){if(t<b){m[t]=0;for(let r=t;r<s;r++)m[t]=hypotenuse(m[t],e.get(r,t));if(0!==m[t]){0>e.get(t,t)&&(m[t]=-m[t]);for(let r=t;r<s;r++)e.set(r,t,e.get(r,t)/m[t]);e.set(t,t,e.get(t,t)+1)}m[t]=-m[t]}for(let r=t+1;r<i;r++){if(t<b&&0!==m[t]){let i=0;for(let o=t;o<s;o++)i+=e.get(o,t)*e.get(o,r);i=-i/e.get(t,t);for(let o=t;o<s;o++)e.set(o,r,e.get(o,r)+i*e.get(o,t))}w[r]=e.get(t,r)}if(h&&t<b)for(let r=t;r<s;r++)g.set(r,t,e.get(r,t));if(t<d){w[t]=0;for(let r=t+1;r<i;r++)w[t]=hypotenuse(w[t],w[r]);if(0!==w[t]){w[t+1]<0&&(w[t]=0-w[t]);for(let r=t+1;r<i;r++)w[r]/=w[t];w[t+1]+=1}if(w[t]=-w[t],t+1<s&&0!==w[t]){for(let r=t+1;r<s;r++)x[r]=0;for(let r=t+1;r<s;r++)for(let s=t+1;s<i;s++)x[r]+=w[s]*e.get(r,s);for(let r=t+1;r<i;r++){let i=-w[r]/w[t+1];for(let o=t+1;o<s;o++)e.set(o,r,e.get(o,r)+i*x[o])}}if(l)for(let r=t+1;r<i;r++)M.set(r,t,w[r])}}let A=Math.min(i,s+1);if(b<i&&(m[b]=e.get(b,b)),s<A&&(m[A-1]=0),d+1<A&&(w[d]=e.get(d,A-1)),w[A-1]=0,h){for(let t=b;t<c;t++){for(let r=0;r<s;r++)g.set(r,t,0);g.set(t,t,1)}for(let t=b-1;t>=0;t--)if(0!==m[t]){for(let r=t+1;r<c;r++){let e=0;for(let i=t;i<s;i++)e+=g.get(i,t)*g.get(i,r);e=-e/g.get(t,t);for(let i=t;i<s;i++)g.set(i,r,g.get(i,r)+e*g.get(i,t))}for(let r=t;r<s;r++)g.set(r,t,-g.get(r,t));g.set(t,t,1+g.get(t,t));for(let r=0;r<t-1;r++)g.set(r,t,0)}else{for(let r=0;r<s;r++)g.set(r,t,0);g.set(t,t,1)}}if(l)for(let t=i-1;t>=0;t--){if(t<d&&0!==w[t])for(let r=t+1;r<i;r++){let e=0;for(let s=t+1;s<i;s++)e+=M.get(s,t)*M.get(s,r);e=-e/M.get(t+1,t);for(let s=t+1;s<i;s++)M.set(s,r,M.get(s,r)+e*M.get(s,t))}for(let r=0;r<i;r++)M.set(r,t,0);M.set(t,t,1)}let E=A-1,S=Number.EPSILON;for(;A>0;){let t,r;for(t=A-2;t>=-1&&-1!==t;t--){let r=Number.MIN_VALUE+S*Math.abs(m[t]+Math.abs(m[t+1]));if(Math.abs(w[t])<=r||Number.isNaN(w[t])){w[t]=0;break}}if(t===A-2)r=4;else{let e;for(e=A-1;e>=t&&e!==t;e--){let r=(e!==A?Math.abs(w[e]):0)+(e!==t+1?Math.abs(w[e-1]):0);if(Math.abs(m[e])<=S*r){m[e]=0;break}}e===t?r=3:e===A-1?r=1:(r=2,t=e)}switch(t++,r){case 1:{let r=w[A-2];w[A-2]=0;for(let e=A-2;e>=t;e--){let s=hypotenuse(m[e],r),o=m[e]/s,n=r/s;if(m[e]=s,e!==t&&(r=-n*w[e-1],w[e-1]=o*w[e-1]),l)for(let t=0;t<i;t++)s=o*M.get(t,e)+n*M.get(t,A-1),M.set(t,A-1,-n*M.get(t,e)+o*M.get(t,A-1)),M.set(t,e,s)}break}case 2:{let r=w[t-1];w[t-1]=0;for(let e=t;e<A;e++){let i=hypotenuse(m[e],r),o=m[e]/i,n=r/i;if(m[e]=i,r=-n*w[e],w[e]=o*w[e],h)for(let r=0;r<s;r++)i=o*g.get(r,e)+n*g.get(r,t-1),g.set(r,t-1,-n*g.get(r,e)+o*g.get(r,t-1)),g.set(r,e,i)}break}case 3:{let r=Math.max(Math.abs(m[A-1]),Math.abs(m[A-2]),Math.abs(w[A-2]),Math.abs(m[t]),Math.abs(w[t])),e=m[A-1]/r,o=m[A-2]/r,n=w[A-2]/r,a=m[t]/r,u=w[t]/r,c=((o+e)*(o-e)+n*n)/2,f=e*n*(e*n),x=0;(0!==c||0!==f)&&(x=c<0?0-Math.sqrt(c*c+f):Math.sqrt(c*c+f),x=f/(c+x));let p=(a+e)*(a-e)+x,b=a*u;for(let r=t;r<A-1;r++){let e=hypotenuse(p,b);0===e&&(e=Number.MIN_VALUE);let o=p/e,n=b/e;if(r!==t&&(w[r-1]=e),p=o*m[r]+n*w[r],w[r]=o*w[r]-n*m[r],b=n*m[r+1],m[r+1]=o*m[r+1],l)for(let t=0;t<i;t++)e=o*M.get(t,r)+n*M.get(t,r+1),M.set(t,r+1,-n*M.get(t,r)+o*M.get(t,r+1)),M.set(t,r,e);if(0===(e=hypotenuse(p,b))&&(e=Number.MIN_VALUE),o=p/e,n=b/e,m[r]=e,p=o*w[r]+n*m[r+1],m[r+1]=-n*w[r]+o*m[r+1],b=n*w[r+1],w[r+1]=o*w[r+1],h&&r<s-1)for(let t=0;t<s;t++)e=o*g.get(t,r)+n*g.get(t,r+1),g.set(t,r+1,-n*g.get(t,r)+o*g.get(t,r+1)),g.set(t,r,e)}w[A-2]=p;break}case 4:if(m[t]<=0&&(m[t]=m[t]<0?-m[t]:0,l))for(let r=0;r<=E;r++)M.set(r,t,-M.get(r,t));for(;t<E&&!(m[t]>=m[t+1]);){let r=m[t];if(m[t]=m[t+1],m[t+1]=r,l&&t<i-1)for(let e=0;e<i;e++)r=M.get(e,t+1),M.set(e,t+1,M.get(e,t)),M.set(e,t,r);if(h&&t<s-1)for(let e=0;e<s;e++)r=g.get(e,t+1),g.set(e,t+1,g.get(e,t)),g.set(e,t,r);t++}A--}}if(u){let t=M;M=g,g=t}this.m=s,this.n=i,this.s=m,this.U=g,this.V=M}solve(t){let r=this.threshold,e=this.s.length,s=Matrix.zeros(e,e);for(let t=0;t<e;t++)Math.abs(this.s[t])<=r?s.set(t,t,0):s.set(t,t,1/this.s[t]);let i=this.U,o=this.rightSingularVectors,n=o.mmul(s),a=o.rows,h=i.rows,l=Matrix.zeros(a,h);for(let t=0;t<a;t++)for(let r=0;r<h;r++){let s=0;for(let o=0;o<e;o++)s+=n.get(t,o)*i.get(r,o);l.set(t,r,s)}return l.mmul(t)}solveForDiagonal(t){return this.solve(Matrix.diag(t))}inverse(){let t=this.V,r=this.threshold,e=t.rows,s=t.columns,i=new Matrix(e,this.s.length);for(let o=0;o<e;o++)for(let e=0;e<s;e++)Math.abs(this.s[e])>r&&i.set(o,e,t.get(o,e)/this.s[e]);let o=this.U,n=o.rows,a=o.columns,h=new Matrix(e,n);for(let t=0;t<e;t++)for(let r=0;r<n;r++){let e=0;for(let s=0;s<a;s++)e+=i.get(t,s)*o.get(r,s);h.set(t,r,e)}return h}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let t=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,r=0,e=this.s;for(let s=0,i=e.length;s<i;s++)e[s]>t&&r++;return r}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return Matrix.diag(this.s)}};function solve(t,r,e=!1){return(t=WrapperMatrix2D.checkMatrix(t),r=WrapperMatrix2D.checkMatrix(r),e)?new SingularValueDecomposition(t).solve(r):t.isSquare()?new LuDecomposition(t).solve(r):new QrDecomposition(t).solve(r)}let EigenvalueDecomposition=class EigenvalueDecomposition{constructor(t,r={}){let e,s;let{assumeSymmetric:i=!1}=r;if(!(t=WrapperMatrix2D.checkMatrix(t)).isSquare())throw Error("Matrix is not a square matrix");if(t.isEmpty())throw Error("Matrix must be non-empty");let o=t.columns,n=new Matrix(o,o),a=new Float64Array(o),h=new Float64Array(o);if(i||t.isSymmetric()){for(e=0;e<o;e++)for(s=0;s<o;s++)n.set(e,s,t.get(e,s));(function(t,r,e,s){let i,o,n,a,h,l,u,c;for(h=0;h<t;h++)e[h]=s.get(t-1,h);for(a=t-1;a>0;a--){for(l=0,c=0,n=0;l<a;l++)c+=Math.abs(e[l]);if(0===c)for(h=0,r[a]=e[a-1];h<a;h++)e[h]=s.get(a-1,h),s.set(a,h,0),s.set(h,a,0);else{for(l=0;l<a;l++)e[l]/=c,n+=e[l]*e[l];for(i=e[a-1],o=Math.sqrt(n),i>0&&(o=-o),r[a]=c*o,n-=i*o,e[a-1]=i-o,h=0;h<a;h++)r[h]=0;for(h=0;h<a;h++){for(i=e[h],s.set(h,a,i),o=r[h]+s.get(h,h)*i,l=h+1;l<=a-1;l++)o+=s.get(l,h)*e[l],r[l]+=s.get(l,h)*i;r[h]=o}for(h=0,i=0;h<a;h++)r[h]/=n,i+=r[h]*e[h];for(h=0,u=i/(n+n);h<a;h++)r[h]-=u*e[h];for(h=0;h<a;h++){for(i=e[h],o=r[h],l=h;l<=a-1;l++)s.set(l,h,s.get(l,h)-(i*r[l]+o*e[l]));e[h]=s.get(a-1,h),s.set(a,h,0)}}e[a]=n}for(a=0;a<t-1;a++){if(s.set(t-1,a,s.get(a,a)),s.set(a,a,1),0!==(n=e[a+1])){for(l=0;l<=a;l++)e[l]=s.get(l,a+1)/n;for(h=0;h<=a;h++){for(l=0,o=0;l<=a;l++)o+=s.get(l,a+1)*s.get(l,h);for(l=0;l<=a;l++)s.set(l,h,s.get(l,h)-o*e[l])}}for(l=0;l<=a;l++)s.set(l,a+1,0)}for(h=0;h<t;h++)e[h]=s.get(t-1,h),s.set(t-1,h,0);s.set(t-1,t-1,1),r[0]=0})(o,h,a,n),function(t,r,e,s){let i,o,n,a,h,l,u,c,f,m,g,M,w,x,p,b;for(n=1;n<t;n++)r[n-1]=r[n];r[t-1]=0;let d=0,y=0,A=Number.EPSILON;for(l=0;l<t;l++){for(y=Math.max(y,Math.abs(e[l])+Math.abs(r[l])),u=l;u<t&&!(Math.abs(r[u])<=A*y);)u++;if(u>l)do{for(i=e[l],f=hypotenuse(c=(e[l+1]-i)/(2*r[l]),1),c<0&&(f=-f),e[l]=r[l]/(c+f),e[l+1]=r[l]*(c+f),m=e[l+1],o=i-e[l],n=l+2;n<t;n++)e[n]-=o;for(d+=o,c=e[u],M=g=1,w=g,x=r[l+1],p=0,b=0,n=u-1;n>=l;n--)for(h=0,w=M,M=g,b=p,i=g*r[n],o=g*c,f=hypotenuse(c,r[n]),r[n+1]=p*f,p=r[n]/f,c=(g=c/f)*e[n]-p*i,e[n+1]=o+p*(g*i+p*e[n]);h<t;h++)o=s.get(h,n+1),s.set(h,n+1,p*s.get(h,n)+g*o),s.set(h,n,g*s.get(h,n)-p*o);c=-p*b*w*x*r[l]/m,r[l]=p*c,e[l]=g*c}while(Math.abs(r[l])>A*y);e[l]=e[l]+d,r[l]=0}for(n=0;n<t-1;n++){for(h=n,c=e[n],a=n+1;a<t;a++)e[a]<c&&(h=a,c=e[a]);if(h!==n)for(a=0,e[h]=e[n],e[n]=c;a<t;a++)c=s.get(a,n),s.set(a,n,s.get(a,h)),s.set(a,h,c)}}(o,h,a,n)}else{let r=new Matrix(o,o),i=new Float64Array(o);for(s=0;s<o;s++)for(e=0;e<o;e++)r.set(e,s,t.get(e,s));(function(t,r,e,s){let i,o,n,a,h,l,u;let c=t-1;for(l=1;l<=c-1;l++){for(u=0,a=l;a<=c;a++)u+=Math.abs(r.get(a,l-1));if(0!==u){for(n=0,a=c;a>=l;a--)e[a]=r.get(a,l-1)/u,n+=e[a]*e[a];for(o=Math.sqrt(n),e[l]>0&&(o=-o),n-=e[l]*o,e[l]=e[l]-o,h=l;h<t;h++){for(i=0,a=c;a>=l;a--)i+=e[a]*r.get(a,h);for(i/=n,a=l;a<=c;a++)r.set(a,h,r.get(a,h)-i*e[a])}for(a=0;a<=c;a++){for(i=0,h=c;h>=l;h--)i+=e[h]*r.get(a,h);for(i/=n,h=l;h<=c;h++)r.set(a,h,r.get(a,h)-i*e[h])}e[l]=u*e[l],r.set(l,l-1,u*o)}}for(a=0;a<t;a++)for(h=0;h<t;h++)s.set(a,h,a===h?1:0);for(l=c-1;l>=1;l--)if(0!==r.get(l,l-1)){for(a=l+1;a<=c;a++)e[a]=r.get(a,l-1);for(h=l;h<=c;h++){for(o=0,a=l;a<=c;a++)o+=e[a]*s.get(a,h);for(o=o/e[l]/r.get(l,l-1),a=l;a<=c;a++)s.set(a,h,s.get(a,h)+o*e[a])}}})(o,r,i,n),function(t,r,e,s,i){let o,n,a,h,l,u,c,f,m,g,M,w,x,p,b,d=t-1,y=t-1,A=Number.EPSILON,E=0,S=0,v=0,k=0,R=0,I=0,N=0,V=0;for(o=0;o<t;o++)for((o<0||o>y)&&(e[o]=i.get(o,o),r[o]=0),n=Math.max(o-1,0);n<t;n++)S+=Math.abs(i.get(o,n));for(;d>=0;){for(h=d;h>0&&(0===(I=Math.abs(i.get(h-1,h-1))+Math.abs(i.get(h,h)))&&(I=S),!(Math.abs(i.get(h,h-1))<A*I));)h--;if(h===d)i.set(d,d,i.get(d,d)+E),e[d]=i.get(d,d),r[d]=0,d--,V=0;else if(h===d-1){if(c=i.get(d,d-1)*i.get(d-1,d),N=Math.sqrt(Math.abs(k=(v=(i.get(d-1,d-1)-i.get(d,d))/2)*v+c)),i.set(d,d,i.get(d,d)+E),i.set(d-1,d-1,i.get(d-1,d-1)+E),f=i.get(d,d),k>=0){for(N=v>=0?v+N:v-N,e[d-1]=f+N,e[d]=e[d-1],0!==N&&(e[d]=f-c/N),r[d-1]=0,r[d]=0,I=Math.abs(f=i.get(d,d-1))+Math.abs(N),R=Math.sqrt((v=f/I)*v+(k=N/I)*k),v/=R,k/=R,n=d-1;n<t;n++)N=i.get(d-1,n),i.set(d-1,n,k*N+v*i.get(d,n)),i.set(d,n,k*i.get(d,n)-v*N);for(o=0;o<=d;o++)N=i.get(o,d-1),i.set(o,d-1,k*N+v*i.get(o,d)),i.set(o,d,k*i.get(o,d)-v*N);for(o=0;o<=y;o++)N=s.get(o,d-1),s.set(o,d-1,k*N+v*s.get(o,d)),s.set(o,d,k*s.get(o,d)-v*N)}else e[d-1]=f+v,e[d]=f+v,r[d-1]=N,r[d]=-N;d-=2,V=0}else{if(f=i.get(d,d),m=0,c=0,h<d&&(m=i.get(d-1,d-1),c=i.get(d,d-1)*i.get(d-1,d)),10===V){for(E+=f,o=0;o<=d;o++)i.set(o,o,i.get(o,o)-f);f=m=.75*(I=Math.abs(i.get(d,d-1))+Math.abs(i.get(d-1,d-2))),c=-.4375*I*I}if(30===V&&(I=(I=(m-f)/2)*I+c)>0){for(I=Math.sqrt(I),m<f&&(I=-I),I=f-c/((m-f)/2+I),o=0;o<=d;o++)i.set(o,o,i.get(o,o)-I);E+=I,f=m=c=.964}for(V+=1,l=d-2;l>=h&&(I=Math.abs(v=((R=f-(N=i.get(l,l)))*(I=m-N)-c)/i.get(l+1,l)+i.get(l,l+1))+Math.abs(k=i.get(l+1,l+1)-N-R-I)+Math.abs(R=i.get(l+2,l+1)),v/=I,k/=I,R/=I,!(l===h||Math.abs(i.get(l,l-1))*(Math.abs(k)+Math.abs(R))<A*(Math.abs(v)*(Math.abs(i.get(l-1,l-1))+Math.abs(N)+Math.abs(i.get(l+1,l+1))))));)l--;for(o=l+2;o<=d;o++)i.set(o,o-2,0),o>l+2&&i.set(o,o-3,0);for(a=l;a<=d-1&&(p=a!==d-1,a!==l&&0!==(f=Math.abs(v=i.get(a,a-1))+Math.abs(k=i.get(a+1,a-1))+Math.abs(R=p?i.get(a+2,a-1):0))&&(v/=f,k/=f,R/=f),0!==f);a++)if(I=Math.sqrt(v*v+k*k+R*R),v<0&&(I=-I),0!==I){for(a!==l?i.set(a,a-1,-I*f):h!==l&&i.set(a,a-1,-i.get(a,a-1)),v+=I,f=v/I,m=k/I,N=R/I,k/=v,R/=v,n=a;n<t;n++)v=i.get(a,n)+k*i.get(a+1,n),p&&(v+=R*i.get(a+2,n),i.set(a+2,n,i.get(a+2,n)-v*N)),i.set(a,n,i.get(a,n)-v*f),i.set(a+1,n,i.get(a+1,n)-v*m);for(o=0;o<=Math.min(d,a+3);o++)v=f*i.get(o,a)+m*i.get(o,a+1),p&&(v+=N*i.get(o,a+2),i.set(o,a+2,i.get(o,a+2)-v*R)),i.set(o,a,i.get(o,a)-v),i.set(o,a+1,i.get(o,a+1)-v*k);for(o=0;o<=y;o++)v=f*s.get(o,a)+m*s.get(o,a+1),p&&(v+=N*s.get(o,a+2),s.set(o,a+2,s.get(o,a+2)-v*R)),s.set(o,a,s.get(o,a)-v),s.set(o,a+1,s.get(o,a+1)-v*k)}}}if(0!==S){for(d=t-1;d>=0;d--)if(v=e[d],0===(k=r[d]))for(h=d,i.set(d,d,1),o=d-1;o>=0;o--){for(c=i.get(o,o)-v,R=0,n=h;n<=d;n++)R+=i.get(o,n)*i.get(n,d);if(r[o]<0)N=c,I=R;else if(h=o,0===r[o]?i.set(o,d,0!==c?-R/c:-R/(A*S)):(f=i.get(o,o+1),m=i.get(o+1,o),u=(f*I-N*R)/(k=(e[o]-v)*(e[o]-v)+r[o]*r[o]),i.set(o,d,u),i.set(o+1,d,Math.abs(f)>Math.abs(N)?(-R-c*u)/f:(-I-m*u)/N)),A*(u=Math.abs(i.get(o,d)))*u>1)for(n=o;n<=d;n++)i.set(n,d,i.get(n,d)/u)}else if(k<0)for(h=d-1,Math.abs(i.get(d,d-1))>Math.abs(i.get(d-1,d))?(i.set(d-1,d-1,k/i.get(d,d-1)),i.set(d-1,d,-(i.get(d,d)-v)/i.get(d,d-1))):(b=cdiv(0,-i.get(d-1,d),i.get(d-1,d-1)-v,k),i.set(d-1,d-1,b[0]),i.set(d-1,d,b[1])),i.set(d,d-1,0),i.set(d,d,1),o=d-2;o>=0;o--){for(g=0,M=0,n=h;n<=d;n++)g+=i.get(o,n)*i.get(n,d-1),M+=i.get(o,n)*i.get(n,d);if(c=i.get(o,o)-v,r[o]<0)N=c,R=g,I=M;else if(h=o,0===r[o]?(b=cdiv(-g,-M,c,k),i.set(o,d-1,b[0]),i.set(o,d,b[1])):(f=i.get(o,o+1),m=i.get(o+1,o),w=(e[o]-v)*(e[o]-v)+r[o]*r[o]-k*k,x=(e[o]-v)*2*k,0===w&&0===x&&(w=A*S*(Math.abs(c)+Math.abs(k)+Math.abs(f)+Math.abs(m)+Math.abs(N))),b=cdiv(f*R-N*g+k*M,f*I-N*M-k*g,w,x),i.set(o,d-1,b[0]),i.set(o,d,b[1]),Math.abs(f)>Math.abs(N)+Math.abs(k)?(i.set(o+1,d-1,(-g-c*i.get(o,d-1)+k*i.get(o,d))/f),i.set(o+1,d,(-M-c*i.get(o,d)-k*i.get(o,d-1))/f)):(b=cdiv(-R-m*i.get(o,d-1),-I-m*i.get(o,d),N,k),i.set(o+1,d-1,b[0]),i.set(o+1,d,b[1]))),A*(u=Math.max(Math.abs(i.get(o,d-1)),Math.abs(i.get(o,d))))*u>1)for(n=o;n<=d;n++)i.set(n,d-1,i.get(n,d-1)/u),i.set(n,d,i.get(n,d)/u)}for(o=0;o<t;o++)if(o<0||o>y)for(n=o;n<t;n++)s.set(o,n,i.get(o,n));for(n=t-1;n>=0;n--)for(o=0;o<=y;o++){for(a=0,N=0;a<=Math.min(n,y);a++)N+=s.get(o,a)*i.get(a,n);s.set(o,n,N)}}}(o,h,a,n,r)}this.n=o,this.e=h,this.d=a,this.V=n}get realEigenvalues(){return Array.from(this.d)}get imaginaryEigenvalues(){return Array.from(this.e)}get eigenvectorMatrix(){return this.V}get diagonalMatrix(){let t,r,e=this.n,s=this.e,i=this.d,o=new Matrix(e,e);for(t=0;t<e;t++){for(r=0;r<e;r++)o.set(t,r,0);o.set(t,t,i[t]),s[t]>0?o.set(t,t+1,s[t]):s[t]<0&&o.set(t,t-1,s[t])}return o}};function cdiv(t,r,e,s){let i,o;return Math.abs(e)>Math.abs(s)?(i=s/e,o=e+i*s,[(t+i*r)/o,(r-i*t)/o]):(i=e/s,o=s+i*e,[(i*t+r)/o,(i*r-t)/o])}let CholeskyDecomposition=class CholeskyDecomposition{constructor(t){let r,e,s;if(!(t=WrapperMatrix2D.checkMatrix(t)).isSymmetric())throw Error("Matrix is not symmetric");let i=t.rows,o=new Matrix(i,i),n=!0;for(e=0;e<i;e++){let a=0;for(s=0;s<e;s++){let i=0;for(r=0;r<s;r++)i+=o.get(s,r)*o.get(e,r);i=(t.get(e,s)-i)/o.get(s,s),o.set(e,s,i),a+=i*i}for(n&=(a=t.get(e,e)-a)>0,o.set(e,e,Math.sqrt(Math.max(a,0))),s=e+1;s<i;s++)o.set(e,s,0)}this.L=o,this.positiveDefinite=!!n}isPositiveDefinite(){return this.positiveDefinite}solve(t){let r,e,s;t=WrapperMatrix2D.checkMatrix(t);let i=this.L,o=i.rows;if(t.rows!==o)throw Error("Matrix dimensions do not match");if(!1===this.isPositiveDefinite())throw Error("Matrix is not positive definite");let n=t.columns,a=t.clone();for(s=0;s<o;s++)for(e=0;e<n;e++){for(r=0;r<s;r++)a.set(s,e,a.get(s,e)-a.get(r,e)*i.get(s,r));a.set(s,e,a.get(s,e)/i.get(s,s))}for(s=o-1;s>=0;s--)for(e=0;e<n;e++){for(r=s+1;r<o;r++)a.set(s,e,a.get(s,e)-a.get(r,e)*i.get(r,s));a.set(s,e,a.get(s,e)/i.get(s,s))}return a}get lowerTriangularMatrix(){return this.L}};let nipals=class nipals{constructor(t,r={}){let e,i,o,n,a;t=WrapperMatrix2D.checkMatrix(t);let{Y:h}=r,{scaleScores:l=!1,maxIterations:u=1e3,terminationCriteria:c=1e-10}=r;if(h){if((h=s.isAnyArray(h)&&"number"==typeof h[0]?Matrix.columnVector(h):WrapperMatrix2D.checkMatrix(h)).rows!==t.rows)throw Error("Y should have the same number of rows as X");e=h.getColumnVector(0)}else e=t.getColumnVector(0);let f=1;for(let r=0;r<u&&f>c;r++)n=(n=t.transpose().mmul(e).div(e.transpose().mmul(e).get(0,0))).div(n.norm()),i=t.mmul(n).div(n.transpose().mmul(n).get(0,0)),r>0&&(f=i.clone().sub(a).pow(2).sum()),a=i.clone(),h?(o=(o=h.transpose().mmul(i).div(i.transpose().mmul(i).get(0,0))).div(o.norm()),e=h.mmul(o).div(o.transpose().mmul(o).get(0,0))):e=i;if(h){let r=t.transpose().mmul(i).div(i.transpose().mmul(i).get(0,0));r=r.div(r.norm());let s=t.clone().sub(i.clone().mmul(r.transpose())),a=e.transpose().mmul(i).div(i.transpose().mmul(i).get(0,0)),l=h.clone().sub(i.clone().mulS(a.get(0,0)).mmul(o.transpose()));this.t=i,this.p=r.transpose(),this.w=n.transpose(),this.q=o,this.u=e,this.s=i.transpose().mmul(i),this.xResidual=s,this.yResidual=l,this.betas=a}else this.w=n.transpose(),this.s=i.transpose().mmul(i).sqrt(),l?this.t=i.clone().div(this.s.get(0,0)):this.t=i,this.xResidual=t.sub(i.mmul(n.transpose()))}};r.XA=AbstractMatrix,r.a_=CholeskyDecomposition,r.yQ=CholeskyDecomposition,r.Hs=DistanceMatrix,r.Ec=EigenvalueDecomposition,r.dx=EigenvalueDecomposition,r.LU=LuDecomposition,r.Rm=LuDecomposition,r.y3=Matrix,r.qK=class extends BaseView{constructor(t,r){checkColumnIndices(t,r),super(t,t.rows,r.length),this.columnIndices=r}set(t,r,e){return this.matrix.set(t,this.columnIndices[r],e),this}get(t,r){return this.matrix.get(t,this.columnIndices[r])}},r.pb=class extends BaseView{constructor(t,r){checkColumnIndex(t,r),super(t,t.rows,1),this.column=r}set(t,r,e){return this.matrix.set(t,this.column,e),this}get(t){return this.matrix.get(t,this.column)}},r.j=class extends BaseView{constructor(t){super(t,t.rows,t.columns)}set(t,r,e){return this.matrix.set(t,this.columns-r-1,e),this}get(t,r){return this.matrix.get(t,this.columns-r-1)}},r.sO=class extends BaseView{constructor(t){super(t,t.rows,t.columns)}set(t,r,e){return this.matrix.set(this.rows-t-1,r,e),this}get(t,r){return this.matrix.get(this.rows-t-1,r)}},r.BZ=class extends BaseView{constructor(t,r){checkRowIndices(t,r),super(t,r.length,t.columns),this.rowIndices=r}set(t,r,e){return this.matrix.set(this.rowIndices[t],r,e),this}get(t,r){return this.matrix.get(this.rowIndices[t],r)}},r.EK=class extends BaseView{constructor(t,r){checkRowIndex(t,r),super(t,1,t.columns),this.row=r}set(t,r,e){return this.matrix.set(this.row,r,e),this}get(t,r){return this.matrix.get(this.row,r)}},r.Db=MatrixSelectionView,r.Fx=class extends BaseView{constructor(t,r,e,s,i){checkRange(t,r,e,s,i),super(t,e-r+1,i-s+1),this.startRow=r,this.startColumn=s}set(t,r,e){return this.matrix.set(this.startRow+t,this.startColumn+r,e),this}get(t,r){return this.matrix.get(this.startRow+t,this.startColumn+r)}},r.tU=class extends BaseView{constructor(t){super(t,t.columns,t.rows)}set(t,r,e){return this.matrix.set(r,t,e),this}get(t,r){return this.matrix.get(r,t)}},r.Ym=nipals,r.rs=nipals,r.QR=QrDecomposition,r.TB=QrDecomposition,r.oH=SingularValueDecomposition,r.Sc=SingularValueDecomposition,r.BN=SymmetricMatrix,r.it=WrapperMatrix1D,r.$r=WrapperMatrix2D,r.QM=function(t,r=t,e={}){t=new Matrix(t);let i=!1;if("object"!=typeof r||Matrix.isMatrix(r)||s.isAnyArray(r)?r=new Matrix(r):(e=r,r=t,i=!0),t.rows!==r.rows)throw TypeError("Both matrices must have the same number of rows");let{center:o=!0,scale:n=!0}=e;o&&(t.center("column"),i||r.center("column")),n&&(t.scale("column"),i||r.scale("column"));let a=t.standardDeviation("column",{unbiased:!0}),h=i?a:r.standardDeviation("column",{unbiased:!0}),l=t.transpose().mmul(r);for(let r=0;r<l.rows;r++)for(let e=0;e<l.columns;e++)l.set(r,e,l.get(r,e)*(1/(a[r]*h[e]))*(1/(t.rows-1)));return l},r.AV=function(t,r=t,e={}){t=new Matrix(t);let i=!1;if("object"!=typeof r||Matrix.isMatrix(r)||s.isAnyArray(r)?r=new Matrix(r):(e=r,r=t,i=!0),t.rows!==r.rows)throw TypeError("Both matrices must have the same number of rows");let{center:o=!0}=e;o&&(t=t.center("column"),i||(r=r.center("column")));let n=t.transpose().mmul(r);for(let r=0;r<n.rows;r++)for(let e=0;e<n.columns;e++)n.set(r,e,n.get(r,e)*(1/(t.rows-1)));return n},r.GH=function determinant(t){if((t=Matrix.checkMatrix(t)).isSquare()){let r,e,s;if(0===t.columns)return 1;if(2===t.columns)return r=t.get(0,0),e=t.get(0,1),s=t.get(1,0),r*t.get(1,1)-e*s;if(3!==t.columns)return new LuDecomposition(t).determinant;{let i,o,n;return i=new MatrixSelectionView(t,[1,2],[1,2]),o=new MatrixSelectionView(t,[1,2],[0,2]),n=new MatrixSelectionView(t,[1,2],[0,1]),r=t.get(0,0),e=t.get(0,1),s=t.get(0,2),r*determinant(i)-e*determinant(o)+s*determinant(n)}}throw Error("determinant can only be calculated for a square matrix")},r.SO=function(t,r=!1){return(t=WrapperMatrix2D.checkMatrix(t),r)?new SingularValueDecomposition(t).inverse():solve(t,Matrix.eye(t.rows))},r.uZ=function(t,r={}){let{thresholdValue:e=1e-9,thresholdError:s=1e-9}=r,i=(t=Matrix.checkMatrix(t)).rows,o=new Matrix(i,i);for(let r=0;r<i;r++){let n=Matrix.columnVector(t.getRow(r)),a=t.subMatrixRow(function(t,r){let e=[];for(let s=0;s<t;s++)s!==r&&e.push(s);return e}(i,r)).transpose(),h=new SingularValueDecomposition(a).solve(n),l=Matrix.sub(n,a.mmul(h)).abs().max();o.setRow(r,function(t,r,e,s=1e-9,i=1e-9){if(t>i)return Array(r.rows+1).fill(0);{let t=r.addRow(e,[0]);for(let r=0;r<t.rows;r++)Math.abs(t.get(r,0))<s&&t.set(r,0,0);return t.to1DArray()}}(l,h,r,e,s))}return o},r.yU=function(t,r=Number.EPSILON){if((t=Matrix.checkMatrix(t)).isEmpty())return t.transpose();let e=new SingularValueDecomposition(t,{autoTranspose:!0}),s=e.leftSingularVectors,i=e.rightSingularVectors,o=e.diagonal;for(let t=0;t<o.length;t++)Math.abs(o[t])>r?o[t]=1/o[t]:o[t]=0;return i.mmul(Matrix.diag(o).mmul(s.transpose()))},r.F1=solve,r.re=function(t,r){if(s.isAnyArray(t))return t[0]&&s.isAnyArray(t[0])?new WrapperMatrix2D(t):new WrapperMatrix1D(t,r);throw Error("the argument is not an array")}},93396:function(t,r,e){e.d(r,{$r:function(){return u},Ec:function(){return i},Ym:function(){return h},oH:function(){return l},qK:function(){return n},tU:function(){return a},y3:function(){return o}});var s=e(78406);s.XA,s.a_,s.yQ,s.Hs;let i=s.Ec;s.dx,s.LU,s.Rm;let o=s.y3,n=s.qK;s.pb,s.j,s.sO,s.BZ,s.EK,s.Db,s.Fx;let a=s.tU,h=s.Ym;s.rs,s.QR,s.TB;let l=s.oH;s.Sc,s.BN,s.it;let u=s.$r;s.QM,s.AV,s.y3,s.y3,s.GH,s.SO,s.uZ,s.yU,s.F1,s.re}}]);